<%- include('../partials/head') %>

<%- include('../partials/leftSidebarForStudent.ejs') %>
<%- include('../partials/header.ejs') %>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
  integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<div class="main-content">
  <div class="card card-custom">
    <div class="card-header-custom d-flex justify-content-between p-1">
        <h3 class="ms-5"> Multiple URL HIT</h3>
        <button type="button" class="btn btn-danger ms-auto me-3"  id="multiple-url-hit">
            Multiple Url hit
        </button>  
    </div>
    <div class="card-body table-responsive">
     
    </div>
  </div>  
</div>
<script>
$(document).ready(function() {
    
    let active = `<%- active %>`;
    $('#sidebar .side-menu li.' + active).addClass('active');

    $(document).on('click', '.fa-angles-left', function() {
    $('.left-sidebar').addClass('hide');
    $('.main').css('left', '80px');
    $('.top-navbar').css('left', '80px');
    $('.nmims-logo').addClass('d-none');
    $('.nmims-logo-only').removeClass('d-none');
    $(this).removeClass('fa-angles-left').addClass('fa-angles-right');
    $('.left-sidebar .side-menu li img').css('margin-left','-2px');
});

$(document).on('click', '.fa-angles-right', function() {
    $('.left-sidebar').removeClass('hide');
    $('.main').css('left', '260px');
    $('.top-navbar').css('left', '260px');
    $('.nmims-logo').removeClass('d-none');
    $('.nmims-logo-only').addClass('d-none');
    $(this).addClass('fa-angles-left').removeClass('fa-angles-right');
});

    $('#multiple-url-hit').on('click', async function() {
    const url = '/student/multiple-hit';
    const batchSize = 100; 
    const totalRequests = 1250;
    const batches = Math.ceil(totalRequests / batchSize);

    try {
        const promises = Array.from({ length: batches }, (_, batchIndex) => {
            const start = batchIndex * batchSize;
            const end = Math.min(start + batchSize, totalRequests);
            const batchUrls = Array.from({ length: end - start }, () => fetch(url));
            return Promise.allSettled(batchUrls)
                .then(batchResponses => {
                    batchResponses.forEach((response, index) => {
                        const currentRequestIndex = start + index + 1;
                        console.log(`Response ${currentRequestIndex}:`, response.status === 'fulfilled' ? response.value : 'Error');
                    });
                });
        });

        await Promise.all(promises);
    } catch (error) {
        console.error('Error in one or more batches:', error);
    }
});


});

</script>

<%- include('../partials/footer.ejs') %>

<%- include('../partials/footerEnd.ejs') %>