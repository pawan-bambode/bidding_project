<%- include('../partials/head') %>
<%- include('../partials/leftSidebarForStudent.ejs') %>
<%- include('../partials/header.ejs') %>

<main>
    <div class="main-content">
        <div class="card card-custom-border-curv round-message-container">
            <div class="round-message">
                <div class="card-header-custom d-flex justify-content-between">
                    <h4 class="ms-2 round-name">
                        <%= currentRoundStatus.round_status === 'Round Not Found' ? 'Bidding Round' : currentRoundStatus.roundName %>
                    </h4>    
                </div>
                <div class="card-body table-responsive d-flex justify-content-center align-items-center">
                    <% if (currentRoundStatus.round_ended == 1) {  %>
                        <p>This Round Has Ended!</p>
                    <% } else if (currentRoundStatus.round_status == 'Round Not Found') { %>
                        <p>Round Not Found!</p>
                    <% } %>
                </div>
            </div>
        </div>
        
        <div class="round-basic-details<%= (currentRoundStatus.round_not_started_yet == 1) ? '' : ' d-none' %>">
            <ul class="d-flex round-wises justify-content-between align-items-end">
                <li class="ms-5 active">
                    <a class="text-decoration-none text-dark">
                        <div class="d-flex flex-column justify-content-center align-items-center h-100">
                            <div class="d-flex justify-content-between align-items-center active-div">
                                <h4 class="ms-2 round-name" data-round-id="<%- roundDetails.round_lid %>"><%- roundDetails.roundName %></h4>
                            </div>
                        </div>
                    </a>
                </li>
            </ul>
             
            <div class="main-div-round-wise card-custom-border-curv p-3">
                <div class="card-header-custom d-flex justify-content-between p-1">
                    <h5 class="ms-2 round-name"><%- roundDetails.roundName %></h5>
                    <h5 class="time-remaining my-0 mx-1"></h5>
                </div>
                <div class="card-body table-responsive">
                    <div class="row ps-5 pe-5">
                        <div class="col-md-4 round-not-started-one-days">
                            <h6>Bidding Name :&nbsp;
                                <span id="total-bid-points"> <%- studentBidsPoints.student_bid_points %></span>
                            </h6>
                        </div>
                        
                        <div class="col-md-4">
                            <h6>Remaining Bid Points :&nbsp;
                                <span id="remaining-bid-points"><%- remaingBidPoints.student_bid_points %>
                            </h6>
                        </div>
                        <div class="col-md-4">
                            <h6>Credits Winning : &nbsp;
                                <span id="credits-winning">0</span>
                            </h6>
                        </div>
                    </div>
                    <div class="row ps-5 pe-5">
                        <% for (let acadSessionCredit of acadSessionsWiseCredits) { %>
                            <div class="col-md-4">
                                <h6><%- acadSessionCredit.name %> 
                                    <%- acadSessionCredit.name %>
                                    Credits :&nbsp;
                                    <span class="credits-point-target" id="credits-points-target-<%- acadSessionCredit.id %>" data-id="<%-acadSessionCredit.id %>"><%-
                                        acadSessionCredit.credits %></span>
                                </h6>
                            </div>
                        <% } %>
                    </div>
                    <div class="row ps-5 pe-5">
                        <% for (let acadSession of acadSessionsWiseCredits) { %>
                            <div class="col-md-4">
                                <h6> Selected  <%- acadSession.name %> Credits :&nbsp;
                                    <span class="credit-points credits-points-<%- acadSession.id %>" data-id="<%- acadSession.id %>" id="credits-points-<%- acadSession.id %>">0</span>
                                </h6>
                            </div>
                        <% } %>
                    </div>
                    <div class="row ps-5 pe-5">
                        <div class="col-md-4">
                            <h6>Start Time :&nbsp;
                                <span id="start-time"><%- roundDetails.startTime %></span>
                            </h6>
                        </div>
                        <div class="col-md-4">
                            <h6>End Time :&nbsp;
                                <span id="end-time"><%- roundDetails.endTime %></span>
                            </h6>
                        </div>
                        <div class="col-md-4">
                            <h6>Current Time : &nbsp;
                                <span id="current-date-time"></span>
                            </h6>
                        </div>
                    </div>
                </div>
            </div>
        </div> 
    
        <div class="round-wise-details<%= (currentRoundStatus.round_started == 1) ? '' : ' d-none' %>">
            <div class="card card-custom-border-curv mt-5">
                <div class="card-header-custom d-flex justify-content-between p-1">
                    <h3 class="ms-2">Confirmation Courses</h3>
                </div>
                <div class="card-body table-responsive">
                    <table class="table table-bordered mt-4" id="confirm-course-table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Area</th>
                                <th>Course</th>
                                <th>Acad Session</th>
                                <th>Faculty</th>
                                <th>Credits</th>
                                <th>Your Bid</th>
                            </tr>
                        </thead>
                        <tbody>
                        
                        </tbody>
                    </table>
                </div>
            </div>
        
            <div class="card card-custom-border-curv mt-5">
                <div class="card-header-custom d-flex justify-content-between p-1">
                    <h3 class="ms-2">Bidding Course</h3>
                </div>
                <div class="col-md-3 mt-4 ms-5">
                    <select class="form-select form-control bidding-acad-session" id="bidding-acad-session">
                        <option value="1">Select All</option>
                        <option value="34">Trimester IV</option>
                        <option value="35">Trimester V</option>
                        <option value="36">Trimester VI</option>
                    </select>
                </div>
                
                <div class="card-body table-responsive">
                    <table class="table table-bordered mt-4" id="bidding-table">
                        <thead>
                            <th>#</th>
                            <th>Area</th>
                            <th>Course</th>
                            <th>Acad Session</th>
                            <th>Faculty</th>
                            <th>Credits</th>
                            <th>Available Seats</th>
                            <th>Total Bidders</th>
                            <th>MRB</th>
                            <th>Winning status</th>
                            <th>Your Bid</th>
                            <th>Change Bid</th>
                            <th>Withdraw</th>
                        </thead>
                        <tbody>
                        
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card card-custom-border-curv mt-5" id="bidding-modal">
                <div class="card-header-custom d-flex justify-content-between p-1">
                    <h3 class="ms-2">Available Courses</h3>
                </div>
                <div class="card-body table-responsive">
                
                    <div class="row">
                        <div class="col-md-3 mt-4 ms-2">
                            <select class="form-select form-control select2" id="acad-session-change">
                                <option selected disabled value="-1">--Select Acad Session-- </option>
                                    <%for(let acadSession of acadSessionsWiseCredits) { %>
                                        <option value="<%- acadSession.id %>"><%- acadSession.name %></option>
                                    <% } %>
                            </select>
                        </div>
                        <div class="col-md-3 mt-4 ms-2">
                            <select class="form-select form-control select2 d-none" id="area-change">
                                <option value="" selected>Select Area</option>
                                <option value="All">Select All Areas</option>
                                    <% for (let area of areaList) { %>
                                        <option value="<%-area.area_name %>"><%-area.area_name %></option>
                                    <% } %>
                            </select>
                        </div>
                        <div class="col-md-3 mt-4 ms-2">
                            <select class="form-select form-control select2 d-none" id="course-filter">
                                <option value="" selected>Select Course</option>
                                <option value="All">Select All Courses</option>
                                    <% for (let biddingCourse of courseList) { %>
                                        <option value="<%-biddingCourse.course_id %>"><%-biddingCourse.course_name %></option>
                                    <% } %>
                            </select>
                        </div>
                    </div>
                
                    <table class="table table-bordered mt-4" id="bidding-trimester-select-table">
                        <thead>
                            <th>#</th>
                            <th>Area</th>
                            <th>Course</th>
                            <th>Trimester</th>
                            <th>Course Timings</th>
                            <th>Credits</th>
                            <th>Available Seats</th>
                            <th>Total Bidders</th>
                            <th>MRB</th>
                            <th>Action</th>
                        </thead>        
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div> 
        </div>        
    </div>  
</main> 

<footer>
    <div class="student-footer text-center">
        <div class="student-footer-div">
            <div class="d-flex justify-content-center align-items-center round-wise-details d-none">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex justify-content-between align-items-center">
                        <% for(let acadSession of acadSessionsWiseCredits) {%>
                            <h6 class="p-1 px-3">Selected <%- acadSession.name %>  Credits :&nbsp;
                                <span class="credit-points credits-points-<%- acadSession.id %>">0</span>
                            </h6>
                        <% } %> 
                        <h5 class="text-danger time-remaining"></h5>
                    </div>
                </div>
            </div>
        </div>    
    </div>
</footer>

<%- include('../partials/footer.ejs') %>
<script src="/socket.io/socket.io.js"></script>
<script>
    
$(document).ready(function() {

    $('.select2').select2();
    let socket = io();

    let roundDetails = JSON.parse(`<%- JSON.stringify(roundDetails) %>`);

    let isStudentPartOfRound = `<%- isStudentPartOfRound %>`;
    
    let currentRoundStatus = JSON.parse(`<%- JSON.stringify(currentRoundStatus) %>`);

    let concentrationSet = JSON.parse(`<%- JSON.stringify(concentrationSet) %>`);
    
    let creditsList = JSON.parse(`<%- JSON.stringify(acadSessionsWiseCredits) %>`)

    let considerationSet = JSON.parse(`<%- JSON.stringify(considerationSetList) %>`);
    let totalStudentBidPoints = `<%- studentBidsPoints.student_bid_points %>`
    
    $('#student-data').attr('data-isEligibleForRound', '<%= isStudentPartOfRound %>');
    $('#sidebar .side-menu li.' + `<%- active %>`).addClass('active');
    
    let userId = $('#student-data').data('user-id');
    let activeBidding = $('#student-data').data('active-bidding');
    let studentId = $('#student-data').data('student-id');
    
    let concentrationId = concentrationSet.concentraionId;
    let biddingSessionId = concentrationSet.biddingId;
    let concentrationName = concentrationSet.concentration_name;

    let biddingDetails = [];
    let minCreditsCompleteArea = [];
    let primaryAreaDetails = [];
    let totalBidPointBidByStudent = [];
    let areaCount = 0;
    let areaDetails = 0;
 
    let winningCredits = 0;
    let creditPointsPerTrimester = {};
    let creditComparisonByTrimester = {};
    let currentCreditsPoints = {};
    let biddingRow = ``;
    let divisionBatchId ;
    let subjectAlreadySelected = false;

    let studentBiddingStatus = {
        creditsPerArea: [],
        creditsPerSession: [],
        primaryArea: `${concentrationSet.name}`,
        totalCredit: 0,
        coursesId: [],
        divisionBatchId: [],
        winningCredits: 0,
        totalBidPoints: 0,
        winningBidPoints: 0
    };

    if (considerationSet.length) {
        considerationSet.forEach(concenSet => {
            studentBiddingStatus.divisionBatchId.push(concenSet.division_batch_lid);
            studentBiddingStatus.coursesId.push(concenSet.course_id);

            let areaIndex = studentBiddingStatus.creditsPerArea.findIndex(ele => ele.area === concenSet.area_name);
            if (areaIndex !== -1) {
                studentBiddingStatus.creditsPerArea[areaIndex].credits += concenSet.credits;
            } else {
                studentBiddingStatus.creditsPerArea.push({
                    area: concenSet.area_name,
                    credits: concenSet.credits
                });
            }

            let sessionIndex = studentBiddingStatus.creditsPerSession.findIndex(ele => ele.acadSessionId === concenSet.sap_acad_session_id);
            if (sessionIndex !== -1) {
                studentBiddingStatus.creditsPerSession[sessionIndex].credits += concenSet.credits;
            } else {
                studentBiddingStatus.creditsPerSession.push({
                    acadSessionId: concenSet.sap_acad_session_id,
                    credits: concenSet.credits
                });
            }
        });
    }
 
    considerationSetCourses(considerationSet);
    
    $('#bidding-table tbody td.winning').each(function() {
        winningCredits += $(this).closest('tr').data('credits');
    });

    creditsList.forEach(item => {

        const { id, credits } = item;
        
        creditPointsPerTrimester[id] = { credits };
        creditComparisonByTrimester[id] = { credits };
        currentCreditsPoints[id] = 0;
    });
 
    $('#bidding-acad-session').on('change', function(){

        let id = $(this).val();
        $("#bidding-table tbody tr").hide();
        
        $("#bidding-table tbody tr").filter(function () {
            let rowAcadSessionId = $(this).data('acad-session-id');
            return rowAcadSessionId == id;
        }).each(function(index) {

            $(this).find('.id-column').text(index + 1);

            if ((index) % 2 == 0) {
                $(this).addClass('odd-row');
                $(this).removeClass('even-row');
            }
            else if((index)% 2 == 1){
                $(this).removeClass('odd-row');
                $(this).addClass('even-row');
            }
        }).show();
    });

    $('#area-change').on('change', function () {
        let acadSessionId = $('#acad-session-change').val();
        let areaId = $(this).val();
        let roundId = $('.round-basic-details .round-name').data('round-id');
        let studentId = $('#student-data').data('student-id');
 
        let ApiObj = {
            url: '/student/bidding/courses-by-area',
            type: 'POST',
            data: {
                acadSessionId: acadSessionId,
                areaId: areaId,
                roundId: roundId,
                studentId: studentId
            },
            dataType: 'JSON'
        }
        ajaxApi(ApiObj).then(result => {
            
            let courseName = `<option selected value="-1">--Select Area--</option>`;
            if (result.courseListDrop.length > 0) {
                result.courseListDrop.forEach(area => {
                    courseName += `<option value="${area.course_id}">${area.courseName}</option>`;
                });
            } else {
                courseName += `<option value="">No Area Found!</option>`;
            }
            $("#course-filter").html(courseName);
            $('#bidding-trimester-select-table tbody').html('');
            availableCourse(result.courseList, false);  
        })
    })

    $('#acad-session-change').on('change', function () {
        let acadSessionId = $(this).val();
        let roundId = $('.round-basic-details .round-name').data('round-id');
        let studentId = $('#student-data').data('student-id');

        let ApiObj = {
            url: '/student/bidding/courses-by-acad',
            type: 'POST',
            data: {
                acadSessionId: acadSessionId,
                roundId: roundId, 
                studentId: studentId
            },
            dataType: 'JSON'
        };

        ajaxApi(ApiObj).then(result => {
        
            let areaName = `<option selected  value="-1">--Select Area--</option>`;
            if (result.areaList.length > 0) {
                result.areaList.forEach(area => {
                    areaName += `<option value="${area.id}">${area.areaName}</option>`;
                });
            } else {
                areaName += `<option value="">No Area Found!</option>`;
            }

            $("#area-change").html(areaName);

            $('#bidding-trimester-select-table tbody').html('');

            availableCourse(result.courseList, false);     
        });
    });
    
    $('#course-filter').on('change', function () {
        let acadSessionId = $('#acad-session-change').val();
        let areaId = $('#area-change').val();
        let roundId = $('.round-basic-details .round-name').data('round-id');
        let studentId = $('#student-data').data('student-id');
        let courseId = $(this).val();

        let ApiObj = {
            url: '/student/bidding/available-coures-by-courseId',
            type: 'POST',
            data: {
                acadSessionId: acadSessionId,
                areaId: areaId,
                roundId: roundId,
                studentId: studentId,
                courseId: courseId
            },
            dataType: 'JSON'
        }
        ajaxApi(ApiObj).then(result => {
            let courseName = `<option selected value="-1">--Select Area--</option>`;
            $('#bidding-trimester-select-table tbody').html('');
            availableCourse(result.courseList, false);  
        })
    })

    $('#bidding-trimester-select-table').on('click','.add-bidding',function() {
        
        biddingRow = ``;

        let areaName = $(this).closest('tr').data('area-name');
        let courseName = $(this).closest('tr').data('course-name');
        let credits = $(this).closest('tr').data('credits');
        let available = $(this).closest('tr').data('max-seats');
        let acadSession = $(this).closest('tr').data('acad-session');
        let divisionBatchId = $(this).closest('tr').data('division-batch-lid');
        let facultyId = $(this).closest('tr').data('faculty-id');
        let facultName = $(this).closest('tr').data('faculty-name');
        let acadSessionId = $(this).closest('tr').data('acad-session-id');
        let courseTime = $(this).closest('tr').children('.course-timing').html();
        let courseId = $(this).closest('tr').data('course-id');
        let courseLid = $(this).closest('tr').data('course-lid');
        let courseNameWithDivision = $(this).closest('tr').data('course-division-name');
        let tableId = $('#bidding-table tbody tr').length;
        let studentId = $('#student-data').data('student-id');
        let id = $(this).closest('tr').data('id');

        let roundId = `<%- roundDetails.round_lid %>`;
    
        biddingRow = `<tr 
                        data-id= "${id}" 
                        data-round-id ="${roundId}" 
                        data-area-name ="${areaName}" 
                        data-course-name ="${courseName}" 
                        data-acad-session ="${acadSession}" 
                        data-division-batch-lid ="${divisionBatchId}" 
                        data-faculty-id =${facultyId}
                        data-credits = "${credits}" 
                        data-max-seats ="${available}"
                        data-course-time ="${courseTime}" 
                        data-acad-session-id = "${acadSessionId}" 
                        data-course-id ="${courseId}" 
                        data-course-lid="${courseLid}"
                        >
                            <td class="id-column">${++tableId}</td>
                            <td>${areaName}</td>
                            <td>${courseNameWithDivision}</td>
                            <td>${acadSession}</td>
                            <td>${facultName}</td>
                            <td>${credits}</td>
                            <td class="available-count">0</td>
                            <td class="total-bidder-counts">0</td>
                            <td class="mrb-points"></td>
                            <td class="winning-status winning">Yes</td>
                            <td class="student-previous-bid-point">0</td>
                            <td class="d-flex">
                                <input type="text" placeholder="Bids" class="p-2 student-current-bid-point" size='15' autocomplete="off">
                                    <button class="btn border border-dark ms-2 add-bidding-points">
                                        <img src='/image/student/body-part-image/bidding-round-image/check-mark.png' alt='checkmark'>
                                    </button> 
                            </td>
                            <td>
                                <button class="btn border border-danger withdraw-bidding mt-1">
                                    <img src='/image/student/body-part-image/bidding-round-image/withdraw.png'>
                                </button>
                            </td>
                        </tr>`;
                        
            socket.emit('createOrJoinRoom',{ 
                slugName: "<%- slug %>",
                studentLid: studentId,
                round_lid: roundId,
                courseLid: courseLid,
                concentration_lid: concentrationId,
                divisionBatchLid: divisionBatchId,
                userId: userId,
                biddingSessionId: biddingSessionId
            }); 
    })

    socket.on('totalBiddersUpdate', function(totalBiddersUpdate){
        let divisionBatchId = totalBiddersUpdate.divisionBatchLid;
        let divisionBatchWiseRow = $(`#bidding-table tr[data-division-batch-lid="${divisionBatchId}"]`);
        divisionBatchWiseRow.find('.total-bidder-counts').text(totalBiddersUpdate.totalBidders);
        divisionBatchWiseRow.find('.mrb-points').text(totalBiddersUpdate.mrb);
    });

    socket.on('sameRoomMemberEffectAfterBidding', function(data){
        let divisionBatchId = totalBiddersUpdate.divisionBatchLid;
        let divisionBatchWiseRow = $(`#bidding-table tr[data-division-batch-lid="${divisionBatchId}"]`);
        divisionBatchWiseRow.find('.total-bidder-counts').text(totalBiddersUpdate.totalBidders);
        divisionBatchWiseRow.find('.mrb-points').text(totalBiddersUpdate.mrb);
    });

    socket.on('addBiddingResponse', function(biddingResponseResult) {

        const message = biddingResponseResult.message;
        const biddingDetails = biddingResponseResult.biddingDetails;
        let divBatchAlreadySelected = false;
        let subjectAlreadySelected = false;

        const isErrorResponse = message.status === 0;
        const biddingResponseToUser = message.description;

        if (isErrorResponse) {
            createToast({ title: "Fail", msg: biddingResponseToUser, type: "negative", showingTime: "1000" });
        } else {
            const divisionBatchId = biddingDetails.div_batch_lid;
            const isSuccessResponse = message.status === 1;

            if (isSuccessResponse) {
                $('#bidding-table tbody').append(biddingRow);
                const biddingRowAdded = $(`#bidding-table tr[data-division-batch-lid="${divisionBatchId}"]`); 

                const courseId = biddingRowAdded.data('course-id');
                const acadSessionId = biddingRowAdded.data('acad-session-id');
                const credits = biddingRowAdded.data('credits');
                const areaName = biddingRowAdded.data('area-name');

                currentCreditsPoints[acadSessionId] += credits;
                studentBiddingStatus.coursesId.push(courseId);
            
                studentBiddingStatus.divisionBatchId.forEach((ele) => {
                    if (ele.area === areaName) {
                        divBatchAlreadySelected = true;
                        return;
                    }
                });

                if (!divBatchAlreadySelected) {
                    studentBiddingStatus.divisionBatchId.push({ divisionBatchId: divisionBatchId, studentBid: 0 });
                }

                studentBiddingStatus.creditsPerArea.forEach((ele) => {
                    console.log(ele);
                    if (ele.area === areaName) {
                        ele.credits += credits;
                        subjectAlreadySelected = true;
                        return;
                    }
                });

                if (!subjectAlreadySelected) {
                    studentBiddingStatus.creditsPerArea.push({ area: areaName, credits: credits });
                }

                let biddingSessionLength = studentBiddingStatus.creditsPerSession.length;

                const matchingSessionIndex = studentBiddingStatus.creditsPerSession.findIndex((ele) => ele.acadSessionId == acadSessionId);
                console.log('valuesof matchingSessionIndex', matchingSessionIndex);
                
                console.log('acadSessionId', acadSessionId);
                if (matchingSessionIndex !== -1) {
                    console.log('inside the if block', matchingSessionIndex);
                    studentBiddingStatus.creditsPerSession[matchingSessionIndex].credits += credits;
                } 

                if (biddingSessionLength === 0) {
                    studentBiddingStatus.creditsPerSession.push({ acadSessionId: acadSessionId, credits: credits });
                }

                console.log(studentBiddingStatus.creditsPerSession);

                $(`#bidding-trimester-select-table tr[data-division-batch-lid="${divisionBatchId}"]`).remove();
                updateTableForCurrentUser(biddingDetails);
                createToast({ title: "Success", msg: biddingResponseToUser, type: "positive", showingTime: "1000" });
            } else {
                createToast({ title: "Fail", msg: biddingResponseToUser, type: "negative", showingTime: "1000" });
            }
        }
        console.log(studentBiddingStatus.divisionBatchId)
    });
    
    $('#bidding-table').on('click', '.withdraw-bidding', function() {
        
        let concentrationId = $(this).closest('tr').data('id');
        let divisionBatchId = $(this).closest('tr').data('division-batch-lid');
        let acadSessionId = $(this).closest('tr').data('acad-session-id');
        let credits = $(this).closest('tr').data('credits');
        let bidPoints = $(this).closest('tr').find('.student-previous-bid-point').html();
        let totalBidPoints = Number($('#remaining-bid-points').html());
        let studentId = $('#student-data').data('student-id');
        let roundId = $('.round-basic-details h4.round-name').data('round-id');

        socket.emit('withdrawBidding', { 
            slugName: "<%- slug %>",
            id: concentrationId,
            studentLid: studentId,
            round_lid: roundId,
            divisionBatchLid: divisionBatchId,
            userId: userId,
            biddingSessionId: biddingSessionId
        });
        
    });

    socket.on('withdrawBiddingResponse', function (withdrawResponse) {

        console.log('withdrawResponse----->', withdrawResponse);
        console.log('studentBiddingStatus-->', studentBiddingStatus);
    
        const divisionBatchId = withdrawResponse.divisionId;
        const isErrorResponse = withdrawResponse.message.status === 0;
        const withdrawResponseToUser = withdrawResponse.message.description;

        const isSuccessResponse = withdrawResponse.message.status === 1;
        
        studentBiddingStatus.divisionBatchId =  studentBiddingStatus.divisionBatchId.filter(studentBiddingDivBatch => studentBiddingDivBatch.divisionBatchId != divisionBatchId )

        // studentBiddingStatus.creditsPerArea =  studentBiddingStatus.creditsPerArea.map((studentCreditsPerSession) => {

        //     if (studentCreditsPerSession.acadSessionId == acadSessionId) {
        //         ele.credits -= credits;
        //     }
        // });

        if (isErrorResponse) {
            createToast({ title: "Fail", msg: withdrawResponseToUser, type: "negative", showingTime: "1000" });
        } else {
            const isSuccessResponse = withdrawResponse.message.status === 1;

            if (isSuccessResponse) {

                let targetRow = $(`#bidding-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
                targetRow.remove();
                availableCourse(withdrawResponse.courseList, withdrawResponse.courseList.is_favourite);                
                withdrawResponse.withdrawBiddingCourse.forEach(userSpecificWithdrawStatus => {
                    updateTableForCurrentUser(userSpecificWithdrawStatus);
                });
                createToast({ title: "Success", msg: withdrawResponseToUser, type: "positive", showingTime: "1000" });
            }
        }
    });



    $('#bidding-table tbody tr').each(function(index, element) {
        if(Number($(element).find('.student-previous-bid-point').html()) > 0){
           let divBatchId =  $(element).data('division-batch-lid');
           let bidPoints = Number($(element).find('.student-previous-bid-point').html());
           let bidPointsStudentBid = {
                divisionBatchId: divBatchId,
                bidPoints: bidPoints     
            }
            totalBidPointBidByStudent.push(bidPointsStudentBid);
        }
    });

    $('#bidding-table').on('click', '.add-bidding-points', function () {

        let divisionBatchId = $(this).closest('tr').data('division-batch-lid');
        let bidPoints = $(this).closest('tr').find('.student-current-bid-point').val();
        let studentId = $('#student-data').data('student-id');
        let roundId = $('.round-basic-details h4.round-name').data('round-id');
        let previousBid = $(this).closest('tr').find('.student-previous-bid-point').html();
        let id = $(this).closest('tr').data('id');
        let totalBidPoints = Number($('#total-bid-points').html());
        let remainingBidPoints = Number($('#remaining-bid-points').html());
        let totalBidPointsByStudent = 0;

        let bidJson = {
            id: id,
            previous_bid : previousBid,
            bid_points: bidPoints
        }
        let bidPointsStudentBid = {
            divisionBatchId: divisionBatchId,
            bidPoints: bidPoints     
        }
        
        socket.emit('studentBidding', {
            slugName: "<%- slug %>",
            studentId: studentId,
            roundId: roundId,
            divBatchId: divisionBatchId,
            userId: userId,
            biddingSessionId: biddingSessionId,
            inputJson: JSON.stringify(bidJson)
        });

        if (totalBidPointBidByStudent.some(bidPointBidByStudent => bidPointBidByStudent.divisionBatchId === divisionBatchId)) {
                let bidPointBidByStudent = totalBidPointBidByStudent.find(bidPointBidByStudent => bidPointBidByStudent.divisionBatchId === divisionBatchId);
                bidPointBidByStudent.bidPoints = bidPoints;
            } else {
                totalBidPointBidByStudent.push(bidPointsStudentBid);
            }
        
        $.each(totalBidPointBidByStudent, function(index, bidPointBidByStudent) {
            totalBidPointsByStudent += Number(bidPointBidByStudent.bidPoints);
        });
  
        $('#remaining-bid-points').html(Number(totalStudentBidPoints) - Number(totalBidPointsByStudent));
    });


    socket.on('biddingLooserStatus', function(biddingLooser) { 
    
        let divisionBatchId = biddingLooser.divisionBatchLid;
        let looserId = biddingLooser.looserId;
        let mrbPoint = biddingLooser.mrb;
        let targetRow = $(`#bidding-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
    
        let winningStatusElement = targetRow.find('.winning-status');
        let mrbPointsElement = targetRow.find('.mrb-points');
        mrbPointsElement.html(mrbPoint);
        if(userId == looserId) {
            winningStatusElement.html('No');  
            winningStatusElement.removeClass('winning').addClass('losing');
            $('#bidding-table tbody tr[data-division-batch-lid="' + divisionBatchId + '"]').find('.withdraw-bidding').removeClass('disabled');
        }

    })

    socket.on('studentBiddingResponse', function(biddingReponseResult) {
  
        let biddingResponseToUser = biddingReponseResult.studentBiddingResponse.description;
        const isCurrentUser = userId === biddingReponseResult.userId;
        const isSuccessResponse = biddingReponseResult.studentBiddingResponse.status === 1;

        if (isSuccessResponse) {
            let divisionBatchId = biddingReponseResult.divisionId;
            let mrbPoint = biddingReponseResult.minimumRequireBits.Mrb;
            let bidPoints = biddingReponseResult.minimumRequireBits.MaxBidPoints;

            let targetRow = $(`#bidding-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
            if (targetRow.length > 0) {
                let winningStatusElement = targetRow.find('.winning-status');
                let mrbPointsElement = targetRow.find('.mrb-points');
             
                mrbPointsElement.html(mrbPoint);

                winningStatusElement.html('Yes');
                winningStatusElement.removeClass('losing').addClass('winning');
                if(Number(mrbPoint)> Number(bidPoints)){
                    $(`#bidding-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`).find('.student-previous-bid-point').html(bidPoints);
                    $(`#bidding-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`).find('student-current-bid-point').html('');
                }
                let studentBidPoints = $(`#bidding-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`).find('.student-previous-bid-point').html();

                if(studentBidPoints > 0){
                    $('#bidding-table tbody tr[data-division-batch-lid="' + divisionBatchId + '"]').find('.withdraw-bidding').addClass('disabled');  
                }
            }

            createToast({ title: "Success", msg: biddingResponseToUser, type: "positive", showingTime: "1000"});
        } else {
            createToast({ title: "Fail", msg: biddingResponseToUser, type: "negative", showingTime: "1000"});
        } 
    }); 


    socket.emit('biddingPageLoadTime', { 
        slugName: "<%- slug %>",
        activeBidding:activeBidding,
        biddingTime: JSON.parse(`<%- JSON.stringify(roundDetails) %>`),
        studentId: studentId
    });

    let biddingCourseFlag = false;
    socket.on('remainingTime', data =>{
        
        isEligibleForRound = data.studentList;
        $('#current-date-time').text(data.currentDateTime);
        
        if(data.currentRoundStatus.length > 0){
            
            if(data.currentRoundStatus[0].round_not_started_yet == '1'){
    
                    if(data.roundDetails.length > 0){
                        
                        if(isEligibleForRound == 1){
                            
                            $('.round-message-container').addClass('d-none');
                            $('.round-basic-details').removeClass('d-none');
                            $('.round-basic-details').find('.round-name').text(data.roundDetails[0].roundName);
                            $('.round-basic-details').find('.round-name').attr('data-round-id', data.roundDetails[0].round_lid);
                            $('.round-basic-details').find('#start-time').text(data.roundDetails[0].startTime);
                            $('.round-basic-details').find('#end-time').text(data.roundDetails[0].endTime);
                        }else{

                            $('.round-message-container .round-name').text(data.roundDetails[0].roundName);
                            $('.round-message-container p').text('You are not eligible for this round');
                            $('.round-basic-details').addClass('d-none');
                        }
                    }   
            }
            else if(data.currentRoundStatus[0].round_started == '1'){
                
                if(isEligibleForRound == 1){
                    if(!biddingCourseFlag){
                        availableCourse( data.biddingCourses , false);
                    }
                    biddingCourseFlag = true;
                    $('.round-message-container').addClass('d-none');
                    $('.round-basic-details').removeClass('d-none');
                    $('.round-wise-details').removeClass('d-none');
                    $('.time-remaining').text(data.remainingTime);
                }else{
                    $('.round-message-container').removeClass('d-none');
                    $('.round-message-container .round-name').text(data.roundDetails[0].roundName);
                    $('.round-message-container p').text('You are not eligible for this round');
                    $('.round-basic-details').addClass('d-none');
                }
               
            }
            if(data.currentRoundStatus[0].round_ended == '1'){
                $('.round-message-container').removeClass('d-none');
                $('.round-basic-details').addClass('d-none');
                $('.round-wise-details').addClass('d-none');
                $('.round-message-container .round-name').text(data.roundDetails[0].roundName);
                $('.round-message-container p').text('This Round Has Ended!');
            }
        }else{
            $('.round-message-container').removeClass('d-none');
            $('.round-message-container p').text('Round Not Found!');
            $('.round-basic-details').addClass('d-none');
            $('.round-wise-details').addClass('d-none');
        }
    })

    socket.emit('biddingPageLoad', { 
        biddingTime: JSON.parse(`<%- JSON.stringify(roundSettingTime) %>`),
        slugName: "<%- slug %>",
        roundIId: 4,
        roundId: 2,
        studentId: studentId
    }); 
});

function availableCourse(courses , prepend) {
   
    if(courses.length > 0) {

        courses.forEach(function(course, index) {
        
            let divisionBatchId = course.division_batch_lid;
            let facultyId = course.faculty_id;
            let existingElement = $(`#bidding-trimester-select-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
            let existingFaculty = existingElement.filter(`[data-faculty-id="${facultyId}"]`);
            let otherFacultyExists = existingElement.not(existingFaculty);
            let lengthOfTable = $('#bidding-trimester-select-table tbody tr').length;
            
            if (existingElement.length === 0) {
                    let newRow = `<tr 
                                data-area-name = "${course.area_name}" 
                                data-course-name = "${course.course_name}"
                                data-course-division-name = "${course.course_name}-${course.division}" 
                                data-acad-session = "${course.acad_session}" 
                                data-division-batch-lid = "${course.division_batch_lid}"
                                data-faculty-id = "${course.faculty_id}"
                                data-credits = "${course.credits}"
                                data-max-seats = "${course.max_seats}"
                                data-acad-session-id = "${course.sap_acad_session_id}"
                                data-course-id = "${course.course_id}"
                                data-course-lid = "${course.course_lid}"
                                data-faculty-name = "${course.faculty_name}"
                            >

                            <td class="id-column">${++lengthOfTable}</td>
                            <td>${course.area_name}</td>
                            <td>${course.course_name}-${course.division}
                            ${course.is_favourite == 1 ?
                            '<img class="added-star fav-course" src="/image/student/body-part-image/available-course/added-star.png" alt="added">' : ''}
                            </td>
                            <td>${course.acad_session}</td>
                            <td class='course-timing'>${course.day_name}(${course.StartTime} to ${course.EndTime}) ${course.faculty_name}</td>
                            <td>${course.credits}</td>
                            <td>${course.max_seats}</td>
                            <td>0</td>
                            <td>0</td>
                            <td>
                                <button class="btn border border-dark add-bidding">
                                    <i class="fa-solid fa-circle-plus" style="color:#5ca4ea"></i>
                                </button>
                            </td>
                        </tr>`;
                        if(prepend){
                            $('#bidding-trimester-select-table tbody').prepend(newRow);
                        }
                        else{
                            $('#bidding-trimester-select-table tbody').append(newRow);
                        }
            }else if(existingFaculty.length > 0){
                    return ;
            }
            else {
                let courseTiming = `<div>${course.day_name}(${course.StartTime} to ${course.EndTime})`;
                let contentToAppend = otherFacultyExists.length ? `${courseTiming} - ${course.faculty_name})` : `${courseTiming}`;
                    existingElement.children('.course-timing').append(contentToAppend);            
            }
        });
    }   
}

function considerationSetCourses(courses) {
    
    if(courses.length > 0 ){

        courses.forEach(function(course, index) {
        
            let divisionBatchId = course.division_batch_lid;
            let facultyId = course.faculty_id;
            let existingElement = $(`#bidding-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
            let existingFaculty = existingElement.filter(`[data-faculty-id="${facultyId}"]`);
            let otherFacultyExists = existingElement.not(existingFaculty);
            let lengthOfTable = $('#bidding-table tbody tr').length;

            if (existingElement.length === 0) {

                let newRow = `<tr 
                                data-area-name="${course.area_name}" 
                                data-course-name="${course.course_name}"
                                data-course-division-name="${course.course_name}-${course.division}" 
                                data-acad-session="${course.acad_session}" 
                                data-division-batch-lid="${course.division_batch_lid}"
                                data-faculty-id="${course.faculty_id}"
                                data-credits="${course.credits}"
                                data-max-seats="${course.max_seats}"
                                data-acad-session-id="${course.sap_acad_session_id}"
                                data-course-id="${course.course_id}"
                                data-course-lid="${course.course_lid}"
                                data-faculty-name="${course.faculty_name}"
                                data-id="${course.id}"
                                data-round-id="${course.round_lid}"
                            >               
                                <td class="id-column">${++lengthOfTable}</td>
                                <td>${course.area_name}</td>
                                <td>${course.course_name}-${course.division}
                                    ${course.is_favourite == 1 ?
                                    '<img class="added-star fav-course" src="/image/student/body-part-image/available-course/added-star.png" alt="added">' : ''}
                                </td>
                                <td>${course.acad_session}</td>
                                <td class='course-timing'>${course.faculty_date_time}</td>
                                <td>${course.credits}</td>
                                <td>${course.max_seats}</td>
                                <td>${course.total_bidders}</td>
                                <td class="mrb-points">${course.min_req_bid}</td>
                                <td class="winning-status ${course.is_winning ? 'winning' : 'losing'}">${course.is_winning ? 'Yes' : 'No'}</td>
                                <td class="student-previous-bid-point">${course.bid_points}</td>
                                <td class="d-flex"><input type="text" placeholder="Bids" class="p-2 student-current-bid-point" size='15' autocomplete="off">
                                    <button class="btn border border-dark ms-2 add-bidding-points">
                                        <img src='/image/student/body-part-image/bidding-round-image/check-mark.png' alt='checkmark'>
                                    </button>
                                </td>
                                <td>
                                    <button class="btn border border-danger withdraw-bidding mt-1" ><img src='/image/student/body-part-image/bidding-round-image/withdraw.png'></button>
                                </td>
                            </tr>`;

                        $('#bidding-table tbody').append(newRow);

            } else {
                    let courseTiming = `<div>${course.faculty_date_time}`;
                    let contentToAppend = otherFacultyExists.length ? `${courseTiming} - ${course.faculty_name})` : `${courseTiming}`;
                    existingElement.children('.course-timing').append(contentToAppend);
                }
        });
    }       
}

function updateTableForCurrentUser(userSpecificWinningStatus) {
    
    let divisionBatchId = userSpecificWinningStatus.div_batch_lid;
    let actualAvailableSeats = userSpecificWinningStatus.available_seats;
    let minimumRequireBits = userSpecificWinningStatus.mrb;
    let totalBidders = userSpecificWinningStatus.total_bidders;
    let isWinning = userSpecificWinningStatus.is_winning;    
    
    let targetRow = $(`#bidding-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);

    if (targetRow.length > 0) {

        let availableCountElement = targetRow.find('.available-count');
        let mrbPointsElement = targetRow.find('.mrb-points');
        let winningStatusElement = targetRow.find('.winning-status');
        let totalBidder = targetRow.find('.total-bidder-counts');

        targetRow.attr('data-id', userSpecificWinningStatus.studentBiddingId);
        targetRow.attr('data-round-lid', userSpecificWinningStatus.round_lid);
        availableCountElement.html(actualAvailableSeats);
        totalBidder.html(totalBidders);
        mrbPointsElement.html(minimumRequireBits);

        if (isWinning) {  
            winningStatusElement.html('Yes');
            winningStatusElement.removeClass('losing').addClass('winning');
        
        } else {
            winningStatusElement.html('No');
            winningStatusElement.removeClass('winning').addClass('losing');
            $('#bidding-table tbody tr[data-division-batch-lid="' + divisionBatchId + '"]').find('.withdraw-bidding').removeClass('disabled');
        }
    }
}



</script>

