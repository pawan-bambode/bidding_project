
<%- include('../partials/head') %>
<%- include('../partials/leftSidebarForStudent.ejs') %>
<%- include('../partials/header.ejs') %>

<div class="main-content">
        <ul class="d-flex round-wises justify-content-between align-items-end active-round d-none">
            <li class="ms-5 active" style="height: 58px;">
                <a class="text-decoration-none text-dark">
                    <div class="d-flex flex-column justify-content-center align-items-center h-100">
                        <div class="d-flex justify-content-between align-items-center active-div">
                            <h4 class="ms-2 round-name"></h4>
                        </div>
                    </div>
                </a>
            </li>
        </ul>

        <div class="main-div-round-wise card-custom-border-curv p-3 active-round d-none">
            <div class="card-header-custom d-flex justify-content-between p-1">
                <h5 class="ms-2 round-name"></h5>
                <button class="btn btn-danger time-remaining me-5"></button>
            </div>
            <div class="card-body table-responsive">
                <div class="row ps-5 pe-5">
                    <div class="col-md-4">
                        <h6>Start Time :&nbsp;<span id="start-time"></span></h6>
                    </div>
                    <div class="col-md-4">
                        <h6>End Time :&nbsp;<span id="end-time"></span></h6>
                    </div>
                    <div class="col-md-4">
                        <h6>Current Time : &nbsp;<span id="current-date-time"></span></h6>
                    </div>
                </div>
            </div>
        </div>

        <div class="card card-custom-border-curv mt-5 active-round round-wise-modal d-none">
            <div class="card-header-custom d-flex justify-content-between p-1">
                <h3 class="ms-2">Confirmed Courses</h3>
                <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#swap-modal">Swap</button>
            </div>
            <div class="card-body table-responsive">
                <table class="table table-bordered mt-4" id="confirm-courses-table">
                    <thead>
                        <th>#</th>
                        <th>Area</th>
                        <th>Trimester</th>
                        <th>Course</th>
                        <th>Faculty</th>
                        <th>Credits</th>
                        <th>Your Bid</th>
                        <th>Action</th>
                    </thead>
                    <tbody>
                        <% let count = 1 %>
                        <% for (let confirmCourse of confirmation) { %>
                            <tr data-id="<%- confirmCourse.Id %>" data-division-batch-id="<%- confirmCourse.id %>">
                                <td><%- count++ %></td>
                                <td><%- confirmCourse.area_name %></td>
                                <td><%- confirmCourse.acad_session %></td>
                                <td><%- confirmCourse.course_name %></td>
                                <td><%- confirmCourse.faculty_name %></td>
                                <td><%- confirmCourse.credits %></td>
                                <td><%- confirmCourse.bid_points %></td>
                                <td><button class="btn btn-danger drop-course">Drop</button></td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card card-custom-border-curv mt-5 active-round round-wise-modal d-none"      id="bidding-modal">
            <div class="card-header-custom d-flex justify-content-between p-1">
                <h3 class="ms-2">WaitList Courses</h3>
            </div>
            <div class="card-body table-responsive">
                <table class="table table-bordered mt-4" id="add-drop-wait-list">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Area</th>
                            <th>Course</th>
                            <th>Trimester</th>
                            <th>Faculty</th>
                            <th>Credits</th>
                            <th>Your Bid</th>
                            <th>WaitList Number</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% 
                        let waitListCount = 1;
                        let rankValue;
                        waitListCourses.forEach(function(waitList) { 
                            waitListRanked.forEach(function(rank) { 
                                if(waitList.division_batch_lid == rank.div_batch_lid){
                                    rankValue = rank.rank;
                                }});
                        %>
                        <tr 
                            data-wait-list-id = "<%- waitList.id %>"
                            data-area-name = "<%- waitList.area_name %>" 
                            data-course-name = "<%- waitList.course_name %>" 
                            data-acad-session = "<%- waitList.acad_session %>"
                            data-course-division = "<%- waitList.course_name %>-<%- waitList.division %>"  
                            data-division-batch-lid = "<%- waitList.division_batch_lid %>"
                            data-faculty-id = "<%- waitList.faculty_id %>"
                            data-credits = "<%- waitList.credits %>"
                            data-max-seats = "<%- waitList.max_seats %>"
                            data-acad-session-id = "<%- waitList.sap_acad_session_id %>"
                            data-course-id = "<%- waitList.course_id %>"
                            data-course-lid = "<%- waitList.course_lid %>"
                            data-faculty-name = "<%- waitList.faculty_name %>"
                            data-division = "<%- waitList.division %>"
                            data-available-seats = "<%- waitList.available_seats %>" >
                            
                            <td><%- waitListCount++ %></td>
                            <td><%- waitList.area_name %></td>
                            <td><%- waitList.course_name %>-<%- waitList.division %></td>
                            <td><%- waitList.acad_session %></td>
                            <td><%- waitList.faculty_name %> </td>
                            <td><%- waitList.credits %></td>
                            <td><%- waitList.bid_points %></td>
                            <td><%- rankValue %></td>
                            <% if (waitList.is_winning == true) { %>
                                <td>Winning</td>
                                <td>
                                <button class="btn border border-dark add-drop">
                                    <i class="fa-solid fa-circle-plus" style="color:#5ca4ea"></i>
                                  </button>
                                </td>
                            <% } else { %>
                                <td>WaitList</td>
                                <td><button class="btn btn-danger drop-course">Drop</button></td>
                            <% } %>
                            
                        </tr>
                        <%  }); %>
                    </tbody>                    
                </table>
            </div>
        </div>
        
    <div class="card card-custom-border-curv mt-5 add-drop-modal active-round round-wise-modal d-none" id="add-drop-modal">
        <div class="card-header-custom d-flex justify-content-between p-1">
            <h3 class="ms-2">Available Courses</h3>
        </div>
  
        <div class="card-body table-responsive">
            <div class="d-flex">
                <% for(let acadSession of dropdownAcadSessionList) { %>
                    <div class="col-sm-4 p-2">
                        <button class="btn btn-light w-100 border bidding-trimester bidding-trimester-selected"  data-acad-session-id="<%- acadSession.sap_acad_session_id %>">
                            <%-acadSession.acad_session %>
                        </button>
                    </div>
                <% } %>
            </div>
  
            <div class="row">
                <div class="col-md-3 mt-4 ms-2">
                    <select class="form-select form-control select2 d-none" id="area-filter">
                        <option value="" selected>Select Area</option>
                        <option value="All">Select All Areas</option>
                        <% for(let area of areaList) { %>
                            <option value="<%-area.area_name %>"><%-area.area_name %></option>
                        <% } %>
                    </select>
                </div>
                <div class="col-md-3 mt-4 ms-2">
                    <select class="form-select form-control select2 d-none" id="course-filter">
                        <option value="" selected>Select Course</option>
                        <option value="All">Select All Courses</option>
                        <% for(let biddingCourse of courseList) { %>
                            <option value="<%-biddingCourse.course_id %>"><%-biddingCourse.course_name %></option>
                        <% } %>
                    </select>
                </div>
            </div>
  
            <table class="table table-bordered mt-4" id="add-drop-availale-table">
                <thead>
                    <th>#</th>
                    <th>Area</th>
                    <th>Course</th>
                    <th>Trimester</th>
                    <th>Course Timings</th>
                    <th>Credits</th>
                    <th>Remaining Seats</th>
                    <th>Action</th>
                </thead>
                <tbody>

                </tbody>
            </table>
        </div>
    </div>

    <div class="card card-custom-border-curv empty-round">
        <div class="card-header-custom d-flex justify-content-between">
           <h4 class="ms-2">Add Drop Rounds</h4>
        </div>
        <div class="card-body table-responsive d-flex justify-content-center align-items-center">
           <p>Round Not Found!</p>
        </div>
    </div>
    <div class="modal" tabindex="-1" data-bs-backdrop="static" id="swap-modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Swap Courses</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
             
              <div class="mt-4">
                <select class="form-select form-control select2 mt-4" id="confirm-filter">
                    <option value="-1" selected disabled>--Select Confirmed Courses--</option>
                    <% for (let confirmCourse of confirmation) { %>
                        <option value="<%- confirmCourse.course_lid %>" data-id="<%- confirmCourse.Id %>" data-concentration-id="<%- confirmCourse.concentration_lid %>" data-div-batch-id="<%- confirmCourse.batchId %>"><%- confirmCourse.course_name %>-<%- confirmCourse.division %></option>
                    <% } %>
                </select>
                
              </div>
              <div class="mt-4">
                <select class="form-select form-control select2 mt-4" id="course-swap-filter">
                    <option value="-1" selected disabled>--Select Available Courses--</option>
                    <% for (let availCourse of courseList) { %>
                        <option value="<%- availCourse.course_lid %>" data-div-batch-id="<%- availCourse.division_batch_lid %>"><%- availCourse.course_name %>-<%- availCourse.division %></option>
                    <% } %>
                </select>
                
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" id="add-swap">Add</button>
            </div>
          </div>
        </div>
      </div>
</div>   
    
<%- include('../partials/footer.ejs') %>
<script>
  $(document).ready(function() {

    let socket = io();
    let availCourse = JSON.parse(`<%- JSON.stringify(courseList) %>`);	    	
    let roundDetails = JSON.parse(`<%- JSON.stringify(roundDetails) %>`);
    let concentrationId = `<%- concentrationId %>`;
    let studentId = $('#student-data').data('student-lid');
    if(availCourse != ''){
        avilableCourses(availCourse, false);
    }
    setActiveMenuItem(`<%- active %>`);

    if(roundDetails != '') {

       let roundStartTime = roundDetails.startTime;
       let roundEndTime = roundDetails.endTime;
       let roundName = roundDetails.roundName;
       let roundId = roundDetails.round_lid;
  
       $('#start-time').html(roundStartTime);
       $('#end-time').html(roundEndTime);
       $('.round-name').html(roundName);
       $('.round-name').attr('data-round-id', roundId);
       $('.active-round').removeClass('d-none');
       $('.empty-round').addClass('d-none');
       $('.round-wise-modal').addClass('d-none');
    }

    socket.emit('addDropPageLoad', { 
       slugName: "<%- slug %>",
       biddingTime: JSON.parse(`<%- JSON.stringify(roundSettingTime) %>`),
       roundId: 7,
       roundIId: 8,
       studentId: studentId       
    });

    socket.on('activeAddDropRound', function(data){
        
        let roundName = data.roundDetails[0].roundName;
        let roundId = data.roundDetails[0].round_lid;
        let roundStartTime = data.roundDetails[0].startTime;
        let roundEndTime = data.roundDetails[0].endTime;
        let considerationSet = data.considerationSet;
        let confirmCourse = data.confirmCourse;

            confirmCourse.forEach(confirm => {
                
                let facultyId = confirm.faculty_id;
                let facultyName = confirm.faculty_name;
                let areaName = confirm.area_name;
                let acadSession = confirm.acad_session;
                let acadSessionId = confirm.sap_acad_session_id;
                let courseName = confirm.course_name;
                let courseId = confirm.course_id;
                let courseLid = confirm.course_lid;
                let credits = confirm.credits;
                let bidPoints = confirm.bid_points;
                let division = confirm.division;
                let concentrationId = confirm.concentration_lid;
                let divisionBatchId = confirm.id;
                let isDropped = confirm.is_dropped;
                let isWaitListed = confirm.is_waitlisted;
                let isWinning = confirm.is_winning;
                let roundId = confirm.round_lid; 
                let row =
                    `<tr data-faculty-id="${facultyId}" 
                        data-faculty-name="${facultyName}" 
                        data-area-name="${areaName}" 
                        data-acad-session-id="${acadSessionId}" 
                        data-acad-session="${acadSession}" 
                        data-course-name="${courseName}"
                        data-course-id="${courseId}" 
                        data-credits="${credits}" 
                        data-bid-points="${bidPoints}" 
                        data-division="${division}" 
                        data-concentration-lid="${concentrationId}" 
                        data-division-batch-lid="${divisionBatchId}" 
                        data-is-dropped="${isDropped}" 
                        data-is-waitlist="${isWaitListed}" 
                        data-is-winning="${isWinning}" 
                        data-course-lid="${courseLid}" 
                        data-round-id ="${roundId}"
                        >
                        
                            <td>${areaName}</td>
                            <td>${acadSession}</td>
                            <td>${courseName}-${division}</td>
                            <td>${facultyName}</td>
                            <td>${credits}</td>
                            <td>${bidPoints}</td>
                            <td><button class="btn btn-success confirm-courses me-1">
                                    <i class="fa-solid fa-check"></i> Confirm
                                </button>
                            </td>
                    </tr>`;
                $('#confirm-courses-table tbody').append(row);
            });

        $('#start-time').html(roundStartTime);
        $('#end-time').html(roundEndTime);
        $('.round-name').html(roundName);
        $('.round-name').attr('data-round-id', roundId);

        $('.round-wise-modal').addClass('d-none')           
        $('.active-round').removeClass('d-none');
        $('.empty-round').addClass('d-none');
    })

    $('#swap-modal').on('click','#add-swap',function() {

        let id = $('#confirm-filter').find(':selected').data('id');
        let courseLidToAdd = $("#course-swap-filter").val();
        let studentId = $('#student-data').data('student-id');
        let concentrationId = $('#confirm-filter').find(':selected').data('concentration-id');
        let divBatchLidToDrop = $('#confirm-filter').find(':selected').data('div-batch-id');
        let divBatchLidToAdd = $('#course-swap-filter').find(':selected').data('div-batch-id');
        let roundId = $('.round-name').data('round-id');
        let bidPoint = 0;

        let ApiObj = {
          type:'POST',
          url:'/student/add-drop/swap',
          data:{
            id: id,
            studentId: studentId,
            courseLidToAdd: courseLidToAdd,
            concentrationId:concentrationId,
            divBatchLidToAdd: divBatchLidToAdd,
            divBatchLidToDrop: divBatchLidToDrop,
            roundId: roundId,
            bidPoint: bidPoint
          },
          datatype:'JSON'
          }
          ajaxApi(ApiObj).then(result=>{
           let resultValue = JSON.parse(result.swap);
           if(resultValue.status == 0){
            let errorMessage = JSON.stringify(resultValue.description);
            createToast({ title: "Fail", msg: errorMessage, type: "negative" });
            } 
            else if(resultValue.status == 1){
              createToast({ title: "Success", msg: resultValue.description, type: "positive" });
            }
          }).catch(error =>{
                let errorMessage = JSON.stringify(error.responseJSON.description);
                createToast({ title: "Fail", msg: errorMessage, type: "negative" });
          })    
        })
    
    $('#confirm-courses-table').on('click', '.drop-course', function () {

            let id = $(this).closest('tr').data('id');
            let divisionBatchId = $(this).closest('tr').data('division-batch-id');
            let roundId = $('.round-name').data('round-id');

            let ApiObj = {
                type: 'POST',
                url: '/student/add-drop/drop',
                data: {
                    id: id,
                    divisionBatchId: divisionBatchId,
                    studentId: studentId,
                    roundId: roundId
                },
                dataType: 'JSON'
            };

            ajaxApi(ApiObj).then(result => {
                    if (result.status == 200) {
                        let response = JSON.parse(result.addWaitListResponse);
                        createToast({ title: "Success", msg: response.description, type: "positive" });
                    } else {
                        let errorMessage = JSON.stringify(response.description);
                        createToast({ title: "Fail", msg: errorMessage, type: "negative" });
                    }
            }).catch(error => {
                let errorMessage = JSON.stringify(error.responseJSON.description);
                createToast({ title: "Fail", msg: errorMessage, type: "negative" });
            });
        });


    $('.add-drop').on('click', function() {
        
        let areaName = $(this).closest('tr').data('area-name');
        let courseName = $(this).closest('tr').data('course-name');
        let credits = $(this).closest('tr').data('credits');
        let available = $(this).closest('tr').data('max-seats');
        let acadSession = $(this).closest('tr').data('acad-session');
        let divisionBatchId = $(this).closest('tr').data('division-batch-lid');
        let facultyId = $(this).closest('tr').data('faculty-id');
        let facultyName = $(this).closest('tr').data('faculty-name');
        let acadSessionId = $(this).closest('tr').data('acad-session-id');
        let courseTime = $(this).closest('tr').children('.course-timing').html();
        let courseId = $(this).closest('tr').data('course-id');
        let courseLid = $(this).closest('tr').data('course-lid');
        let division = $(this).closest('tr').data('division');
        let availableSeats = $(this).closest('tr').data('available-seats');
        let roundId = 7;
        let waitListId = '';

        let biddingTable = $('#wait-list-table tbody');
        let tableId = $('#wait-list-table tbody tr').length;

        let ApiObj = {
            type: 'POST',
            url: '/student/add-drop/add',
            data: {
                studentId: studentId,
                roundId: roundId,
                courseId: courseLid,
                concentrationId: concentrationId,
                divBatchId: divisionBatchId,
                bidPoints: 1,
            },
            datatype: 'JSON'
        };

        ajaxApi(ApiObj)
            .then(result => {
                if (result.status == 200) {
                    let waitListResponse = JSON.parse(result.addWaitListResponse);

                    waitListId = waitListResponse.data.inserted_id;
                    createToast(waitListResponse.description, 'alert-success', 'message-content');

                    let biddingRow = `<tr 
                                        data-wait-list-id="${waitListId}" data-area-name="${areaName}" 
                                        data-course-name="${courseName}" data-acad-session="${acadSession}" data-division-batch-lid="${divisionBatchId}" data-faculty-id="${facultyId}" data-credits="${credits}" data-max-seats="${available}" data-course-time="${courseTime}" data-acad-session-id="${acadSessionId}" data-course-id="${courseId}" data-course-lid="${courseLid}"
                                    >
                                        <td class="id-column">${++tableId}</td>
                                        <td>${areaName}</td>
                                        <td>${courseName}-${division}</td>
                                        <td>${acadSession}</td>
                                        <td>${facultyName}</td>
                                        <td>${availableSeats}</td>
                                        <td class="student-previous-bid-point">0</td>
                                        <td class="d-flex"><input type="text" placeholder="Bids" class="p-2 student-current-bid-point" size='15' autocomplete="off">
                                            <button class="btn border border-dark ms-2 add-wait-list-points">
                                                <img src='/image/student/body-part-image/bidding-round-image/check-mark.png' alt='checkmark'>
                                            </button>
                                        </td>
                                        <td>
                                            <button class="btn border border-danger withdraw-wait-list mt-1" data-area="${areaName}">
                                                <img src='/image/student/body-part-image/bidding-round-image/withdraw.png' alt='withdraw'>
                                            </button>
                                        </td>
                                    </tr>`;
                                    
                    biddingTable.append(biddingRow);
                    $(this).closest('tr').remove();
                    arrangeTableId('wait-list-availale-table');
                } else {
                    let waitListResponse = JSON.parse(result.error);
                    createToast(waitListResponse.description, 'alert-danger', 'error-message');
                }
            })
            .catch(error => {
                let waitListResponse = JSON.parse(error.responseJSON.error);
                createToast(waitListResponse.description, 'alert-danger', 'error-message');
                return;
            });
    });
    
    function avilableCourses(courseList) {
        courseList.forEach(function(course, index) {
            let { division_batch_lid: divisionBatchId, faculty_id: facultyId } = course;
            let existingElement = $(`#add-drop-availale-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
            let existingFaculty = existingElement.filter(`[data-faculty-id="${facultyId}"]`);
            let otherFacultyExists = existingElement.not(existingFaculty);
            let lengthOfTable = $('#add-drop-availale-table tbody tr').length;

            if (existingElement.length === 0) {
                let newRow = `<tr 
                                data-area-name="${course.area_name}" 
                                data-course-name="${course.course_name}"
                                data-course-division="${course.course_name}-${course.division}" 
                                data-acad-session="${course.acad_session}" 
                                data-division-batch-lid="${course.division_batch_lid}"
                                data-faculty-id="${course.faculty_id}"
                                data-credits="${course.credits}"
                                data-max-seats="${course.max_seats}"
                                data-acad-session-id="${course.sap_acad_session_id}"
                                data-course-id="${course.course_id}"
                                data-course-lid="${course.course_lid}"
                                data-faculty-name="${course.faculty_name}"
                                data-division="${course.division}"
                                data-available-seats="${course.available_seats}"
                            >
                            <td class="id-column">${++lengthOfTable}</td>
                            <td>${course.area_name}</td>
                            <td>${course.course_name}-${course.division}
                            ${course.is_favourite == 1 ? '<img class="added-star fav-course" src="/image/student/body-part-image/available-course/added-star.png" alt="added">' : ''}
                            </td>
                            <td>${course.acad_session}</td>
                            <td class='course-timing'>${course.day_name}(${course.StartTime} to ${course.EndTime}) ${course.faculty_name}</td>
                            <td>${course.credits}</td>
                            <td>${course.available_seats}</td>
                            <td>
                                <button class="btn border border-dark add-drop">
                                    <i class="fa-solid fa-circle-plus" style="color:#5ca4ea"></i>
                                </button>
                            </td>
                        </tr>`;

                $('#add-drop-availale-table tbody').append(newRow);
            } else {
                let courseTiming = `<div>${course.day_name}(${course.StartTime} to ${course.EndTime})`;
                let contentToAppend = otherFacultyExists.length ? `${courseTiming} - ${course.faculty_name})` : `${courseTiming}`;
                existingElement.children('.course-timing').append(contentToAppend);
            }
        });
    }

});

</script>
<%- include('../partials/footerEnd.ejs') %>