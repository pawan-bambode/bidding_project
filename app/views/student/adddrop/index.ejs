
<%- include('../partials/head') %>

<%- include('../partials/leftSidebarForStudent.ejs') %>
<%- include('../partials/header.ejs') %>

<div class="main-content">

    <ul class="d-flex round-wises justify-content-between align-items-end">
        <li class="ms-5" data-id="7">
            <a href="#" class="text-decoration-none text-dark">
                <div class="d-flex flex-column justify-content-center align-items-center h-100">
                    <div class="d-flex justify-content-between align-items-center active-div">
                        <h4 class="ms-2 round-label">Add Drop Round I</h4>
                    </div>
                </div>
            </a>
        </li>
    
        <li class="ms-5" data-id="8">
            <a href="#" class="text-decoration-none text-dark">
                <div class="d-flex justify-content-center align-items-center h-100">
                    <div class="d-flex justify-content-between align-items-center active-div">
                        <h4 class="ms-2 round-label">Add Drop Round II</h4>
                    </div>
                </div>
            </a>
        </li>
    </ul>

    <div class="main-div-round-wise card-custom-border-curv p-2 mt-4">
        <div class="card card-custom-border-curv mt-2">
            <div class="card-header-custom d-flex justify-content-center p-1">
                <h3 class="add-drop-rounds"></h3>
            </div>
            <div class="card-body table-responsive">
                <div class="row ps-5 pe-5">
                    <div class="col-md-4">
                        <h6>Start Time :&nbsp;<span id="start-time"><%- startAndEndTime.startTime %></span></h6>
                    </div>
                    <div class="col-md-4">
                        <h6>End Time :&nbsp;<span id="end-time"><%-startAndEndTime.endTime %></span></h6>
                    </div>
                    <div class="col-md-4">
                        <h6>Current Time : &nbsp;<span id="current-date-time"></span></h6>
                    </div>
                </div>
            </div>
        </div>
        <div class="card card-custom-border-curv mt-5">
            <div class="card-header-custom d-flex justify-content-between p-1">
                <h3 class="ms-2">Confirmed Courses</h3>
            </div>
            <div class="card-body table-responsive">
                <table class="table custom_row table-bordered mt-4 custom-table" id="confirm-courses-table">
                    <thead>
                        <th>#</th>
                        <th>Area</th>
                        <th>Trimester</th>
                        <th>Course</th>
                        <th>Faculty</th>
                        <th>Credits</th>
                        <th>Your Bid</th>
                    </thead>
                    <tbody>
                        <% let count = 1 %>
                        <% for (let confirmCourse of confirmCourseList) { %>
                            <tr>
                                <td><%- count++ %></td>
                                <td><%- confirmCourse.area_name %></td>
                                <td><%- confirmCourse.acad_session %></td>
                                <td><%- confirmCourse.course_name %></td>
                                <td><%- confirmCourse.faculty_name %></td>
                                <td><%- confirmCourse.credits %></td>
                                <td><%- confirmCourse.bid_points %></td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card card-custom-border-curv mt-5 bidding-modal" id="bidding-modal">
            <div class="card-header-custom d-flex justify-content-between p-1">
                <h3 class="ms-2">WaitList Courses</h3>
            </div>
            <div class="card-body table-responsive">
                <table class="table custom_row table-bordered mt-4 custom-table" id="wait-list-course-table">
                    <thead>
                        <th>#</th>
                        <th>Area</th>
                        <th>Course</th>
                        <th>Trimester</th>
                        <th>Faculty</th>
                        <th>Credits</th>
                        <th>Your Bid</th>
                        <th>WaitList Number</th>
                        <th>Status</th>
                        <th>Action</th>
                    </thead>
                    <tbody>
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <div class="card card-custom-border-curv mt-5 add-drop-modal" id="add-drop-modal">
        <div class="card-header-custom d-flex justify-content-between p-1">
            <h3 class="ms-2">Available Courses</h3>
        </div>
  
        <div class="card-body table-responsive">
            <div class="d-flex">
                <% for(let acadSession of dropdownAcadSessionList) { %>
                    <div class="col-sm-4 p-2">
                        <button class="btn btn-light w-100 border bidding-trimester bidding-trimester-selected"  data-acad-session-id="<%- acadSession.sap_acad_session_id %>">
                            <%-acadSession.acad_session %>
                        </button>
                    </div>
                <% } %>
            </div>
  
            <div class="row">
                <div class="col-md-3 mt-4 ms-2">
                    <select class="form-select form-control select2 d-none" id="area-filter">
                        <option value="" selected>Select Area</option>
                        <option value="All">Select All Areas</option>
                        <% for(let area of areaList) { %>
                            <option value="<%-area.area_name %>"><%-area.area_name %></option>
                        <% } %>
                    </select>
                </div>
                <div class="col-md-3 mt-4 ms-2">
                    <select class="form-select form-control select2 d-none" id="course-filter">
                        <option value="" selected>Select Course</option>
                        <option value="All">Select All Courses</option>
                        <% for(let biddingCourse of courseList) { %>
                            <option value="<%-biddingCourse.course_id %>"><%-biddingCourse.course_name %></option>
                        <% } %>
                    </select>
                </div>
            </div>
  
            <table class="table custom_row table-bordered mt-4 custom-table" id="add-drop-availale-table">
                <thead>
                    <th>#</th>
                    <th>Area</th>
                    <th>Course</th>
                    <th>Trimester</th>
                    <th>Course Timings</th>
                    <th>Credits</th>
                    <th>Remaining Seats</th>
                    <th>Action</th>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <footer class="student-footer">
        <div class="student-footer-div">
            <div class="d-flex justify-content-center align-items-center" style="height: 40px;">
                <div class="d-flex justify-content-between align-items-center">
                    <button class="btn btn-success text-light">Remaining Bid Points:&nbsp;<span id="remaining-bid-points"></span></button>
                </div>
            </div>
        </div>
    </footer>
    
<%- include('../partials/footer.ejs') %>
<script>
$(document).ready(function() {
    
   
    let waitListCourseList = JSON.parse(`<%- JSON.stringify(waitListCourses) %>`);
    let availableCourseList = JSON.parse(`<%- JSON.stringify(courseList) %>`);
    setActiveMenuItem(`<%- active %>`)
    let concentrationId = `<%- concentrationId %>`;
    
    avilableCourses(availableCourseList, false);
    waitListConsiderationSet(waitListCourseList, false, 'wait-list-course-table');

    $('ul.round-wises li').on('click', function () {  
        $('ul.round-wises li').removeClass('active');
        $('.spacer').remove();
        $(this).addClass('active');
        
        let roundId = $(this).data('id');
        let divElement = $('<div></div>').addClass('spacer');
        let spacerWidth = $('li.active .active-div').innerWidth() - Number(40) + 7;
        let outerWidth = Number($(this).outerWidth(true));

        $(':root').css('--active-right-width', outerWidth + 'px');
        $(':root').css('--active-spacer-width', spacerWidth + 'px');

        $(this).append(divElement);
        $(this).css('height', '60px');

        $('.add-drop-rounds').html($(this).find('h4').html());

        let ApiObj = {
            type: 'POST',
            url: '/student/add-drop/round-wise',
            data: {
                roundId: roundId
            },
            datatype: 'JSON'
        };

        ajaxApi(ApiObj)
            .then(result => {
                
                updateConfirmationDetails(result);
            })
            .catch(error => {
      
                createToastError(JSON.stringify(error.responseJSON.description));
            });
    }) 
    
    function updateConfirmationDetails(addDropCourseList) {
        
        const { startAndEndTime, confirmCourseList, winningCourseList } = addDropCourseList;
        const confirmCourseTable = $('#confirm-courses-table tbody');
        const winningCourseTable = $('#wait-list-course-table tbody');

        $('#start-time').html(startAndEndTime.startTime);
        $('#end-time').html(startAndEndTime.endTime);
        $('#confirm-courses-table tbody').empty();
        $('#wait-list-course-table tbody').empty();

        const appendCourseRow = (course, table) => {
            const count = table.find('tr').length + 1;
            const courseRow = `<tr>
                <td>${count}</td>
                <td>${course.area_name}</td>
                <td>${course.acad_session}</td>
                <td>${course.course_name}</td>
                <td>${course.faculty_name}</td>
                <td>${course.credits}</td>
                <td>${course.bid_points}</td>
            </tr>`;
            table.append(courseRow);
        };

        confirmCourseList.forEach(course => appendCourseRow(course, confirmCourseTable));
    }

    function waitListConsiderationSet(biddingCourseList, isWithdraw, tableId) {
            if (!isWithdraw) {
                $(`#${tableId} tbody`).empty();
            }

            biddingCourseList.forEach(function (biddingCourse, index) {
                
                let { division_batch_lid: divisionBatchId, faculty_id: facultyId } = biddingCourse;
                let existingElement = $(`#${tableId} tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
                let existingFaculty = existingElement.filter(`[data-faculty-id="${facultyId}"]`);
                let otherFacultyExists = existingElement.not(existingFaculty);
                let lengthOfTable = $(`#${tableId} tbody tr`).length;
                let isWaitListed = biddingCourse.is_waitlisted;

                if (existingElement.length === 0) {
                    let waitListStatus = isWaitListed ? 'WaitList' : 'Winning';

                    let newRow = `<tr 
                        data-wait-list-id="${biddingCourse.id}"
                        data-area-name="${biddingCourse.area_name}" 
                        data-course-name="${biddingCourse.course_name}"
                        data-course-with-division-name="${biddingCourse.course_name}-${biddingCourse.division}" 
                        data-acad-session="${biddingCourse.acad_session}" 
                        data-division-batch-lid="${biddingCourse.division_batch_lid}"
                        data-faculty-id="${biddingCourse.faculty_id}"
                        data-credits="${biddingCourse.credits}"
                        data-max-seats="${biddingCourse.max_seats}"
                        data-acad-session-id="${biddingCourse.sap_acad_session_id}"
                        data-course-id="${biddingCourse.course_id}"
                        data-course-lid="${biddingCourse.course_lid}"
                        data-faculty-name="${biddingCourse.faculty_name}"
                        data-division="${biddingCourse.division}"
                        data-available-seats="${biddingCourse.available_seats}" >
                    
                        <td class="id-column">${++lengthOfTable}</td>
                        <td>${biddingCourse.area_name}</td>
                        <td>${biddingCourse.course_name}-${biddingCourse.division}
                            ${biddingCourse.is_favourite == 1 ?
                                '<img class="added-star fav-course" src="/image/student/body-part-image/available-course/added-star.png" alt="added">' : ''}
                        </td>
                        <td>${biddingCourse.acad_session}</td>
                        <td class='course-timing'> ${biddingCourse.faculty_name}</td>
                        <td>${biddingCourse.credits}</td>
                        <td class="student-previous-bid-point">${biddingCourse.bid_points}</td>
                        <td class="wait-list-number">1</td>
                        <td>${waitListStatus}</td>
                        <td>
                            <button class="btn border border-danger withdraw-wait-list-add-drop mt-1">
                                <img src='/image/student/body-part-image/bidding-round-image/withdraw.png' alt='withdraw'>
                            </button>
                        </td>
                    </tr>`;

                    $(`#${tableId} tbody`).append(newRow);
                } else {
                    let courseTiming = ``;
                    let contentToAppend = otherFacultyExists.length ? `${courseTiming} - ${biddingCourse.faculty_name})` : `${courseTiming}`;
                    existingElement.children('.course-timing').append(contentToAppend);
                }
            });
        }

        function avilableCourses(biddingCourseList, isWithdraw) {

if (!isWithdraw) {
    $('#add-drop-availale-table tbody').empty();
}

biddingCourseList.forEach(function(biddingCourse, index) {

    let {
        division_batch_lid: divisionBatchId,
        faculty_id: facultyId
    } = biddingCourse;
    let existingElement = $(`#add-drop-availale-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
    let existingFaculty = existingElement.filter(`[data-faculty-id="${facultyId}"]`);
    let otherFacultyExists = existingElement.not(existingFaculty);
    let lengthOfTable = $('#add-drop-availale-table tbody tr').length;

    if (existingElement.length === 0) {
        let newRow = `<tr 
    data-area-name = "${biddingCourse.area_name}" 
    data-course-name = "${biddingCourse.course_name}"
    data-course-with-division-name = "${biddingCourse.course_name}-${biddingCourse.division}" 
    data-acad-session = "${biddingCourse.acad_session}" 
    data-division-batch-lid = "${biddingCourse.division_batch_lid}"
    data-faculty-id = "${biddingCourse.faculty_id}"
    data-credits = "${biddingCourse.credits}"
    data-max-seats = "${biddingCourse.max_seats}"
    data-acad-session-id = "${biddingCourse.sap_acad_session_id}"
    data-course-id = "${biddingCourse.course_id}"
    data-course-lid = "${biddingCourse.course_lid}"
    data-faculty-name = "${biddingCourse.faculty_name}"
    data-division = "${biddingCourse.division}"
    data-available-seats = "${biddingCourse.available_seats}"
    >
  
    <td class="id-column">${++lengthOfTable}</td>
    <td>${biddingCourse.area_name}</td>
    <td>${biddingCourse.course_name}-${biddingCourse.division}
      ${biddingCourse.is_favourite == 1 ?
         '<img class="added-star fav-course" src="/image/student/body-part-image/available-course/added-star.png" alt="added">' : ''}
    </td>
    <td>${biddingCourse.acad_session}</td>
    <td class='course-timing'>${biddingCourse.day_name}(${biddingCourse.StartTime} to ${biddingCourse.EndTime}) ${biddingCourse.faculty_name}</td>
    <td>${biddingCourse.credits}</td>
    <td>${biddingCourse.available_seats}</td>
    <td>
      <button class="btn border border-dark add-drop">
        <i class="fa-solid fa-circle-plus" style="color:#5ca4ea"></i>
      </button>
    </td>
  </tr>`;

        $('#add-drop-availale-table tbody').append(newRow);
    } else {
        let courseTiming = `<div>${biddingCourse.day_name}(${biddingCourse.StartTime} to ${biddingCourse.EndTime})`;
        let contentToAppend = otherFacultyExists.length ? `${courseTiming} - ${biddingCourse.faculty_name})` : `${courseTiming}`;
        existingElement.children('.course-timing').append(contentToAppend);
    }
});
}

$('#add-drop-availale-table').on('click', '.add-drop', function() {
    
        let areaName = $(this).closest('tr').data('area-name');
        let courseName = $(this).closest('tr').data('course-name');
        let credits = $(this).closest('tr').data('credits');
        let available = $(this).closest('tr').data('max-seats');
        let acadSession = $(this).closest('tr').data('acad-session');
        let divisionBatchId = $(this).closest('tr').data('division-batch-lid');
        let facultyId = $(this).closest('tr').data('faculty-id');
        let facultyName = $(this).closest('tr').data('faculty-name');
        let acadSessionId = $(this).closest('tr').data('acad-session-id');
        let courseTime = $(this).closest('tr').children('.course-timing').html();
        let courseId = $(this).closest('tr').data('course-id');
        let courseLid = $(this).closest('tr').data('course-lid');
        let studentId = $('#student-data').data('student-lid');
        let division = $(this).closest('tr').data('division');
        let availableSeats = $(this).closest('tr').data('available-seats');
        let roundId = 6;
        let waitListId = '';

        let biddingTable = $('#wait-list-table tbody');
        let tableId = $('#wait-list-table tbody tr').length;

        let ApiObj = {
            type: 'POST',
            url: '/student/add-drop/add',
            data: {
                studentId: studentId,
                roundId: roundId,
                courseId: courseLid,
                concentrationId: concentrationId,
                divBatchId: divisionBatchId
            },
            datatype: 'JSON'
        };

        ajaxApi(ApiObj)
            .then(result => {
                if (result.status == 200) {
                    let waitListResponse = JSON.parse(result.addWaitListResponse);

                    waitListId = waitListResponse.data.inserted_id;
                    createToast(waitListResponse.description, 'alert-success', 'message-content');

                    let biddingRow = `<tr data-wait-list-id="${waitListId}" data-area-name="${areaName}" data-course-name="${courseName}" 
                        data-acad-session="${acadSession}" data-division-batch-lid="${divisionBatchId}" data-faculty-id="${facultyId}" data-credits="${credits}" data-max-seats="${available}" data-course-time="${courseTime}" data-acad-session-id="${acadSessionId}" data-course-id="${courseId}" data-course-lid="${courseLid}">
                        <td class="id-column">${++tableId}</td>
                        <td>${areaName}</td>
                        <td>${courseName}-${division}</td>
                        <td>${acadSession}</td>
                        <td>${facultyName}</td>
                        <td>${availableSeats}</td>
                        <td class="student-previous-bid-point">0</td>
                        <td class="d-flex"><input type="text" placeholder="Bids" class="p-2 student-current-bid-point" size='15' autocomplete="off">
                            <button class="btn border border-dark ms-2 add-wait-list-points">
                                <img src='/image/student/body-part-image/bidding-round-image/check-mark.png' alt='checkmark'>
                            </button>
                        </td>
                        <td>
                            <button class="btn border border-danger withdraw-wait-list mt-1" data-area="${areaName}">
                                <img src='/image/student/body-part-image/bidding-round-image/withdraw.png' alt='withdraw'>
                            </button>
                        </td>
                    </tr>`;

                    biddingTable.append(biddingRow);
                    $(this).closest('tr').remove();
                    arrangeTableId('wait-list-availale-table');
                } else {
                    let waitListResponse = JSON.parse(result.error);
                    createToast(waitListResponse.description, 'alert-danger', 'error-message');
                }
              })
              .catch(error => {
                  let waitListResponse = JSON.parse(error.responseJSON.error);
                  createToast(waitListResponse.description, 'alert-danger', 'error-message');
                  return;
              });
      });

$('#wait-list-course-table').on('click', '.withdraw-wait-list-add-drop', function() {

let areaName = $(this).closest('tr').data('area-name');
let courseName = $(this).closest('tr').data('course-name');
let credits = $(this).closest('tr').data('credits');
let available = $(this).closest('tr').data('max-seats');
let acadSession = $(this).closest('tr').data('acad-session');
let divisionBatchId = $(this).closest('tr').data('division-batch-lid');
let facultyId = $(this).closest('tr').data('faculty-id');
let facultyName = $(this).closest('tr').data('faculty-name');
let acadSessionId = $(this).closest('tr').data('acad-session-id');
let courseTime = $(this).closest('tr').data('course-time');
let courseId = $(this).closest('tr').data('course-id');
let courseLid = $(this).closest('tr').data('course-lid');
let id = $(this).closest('tr').data('wait-list-id');
let studentId = $('#student-data').data('student-lid');
let division = $(this).closest('tr').data('division');
let roundId = 7;
let lengthOfTable = $('#wait-list-availale-table tbody tr').length;

let ApiObj = {
    type: 'POST',
    url: '/student/wait-list/withdraw',
    data: {
        id: id,
        studentId: studentId,
        roundId: roundId,
        divBatchId: divisionBatchId
    },
    datatype: 'JSON'
};

ajaxApi(ApiObj)
    .then(result => {
        if (result.status == 200) {
            let waitListResponse = JSON.parse(result.addWaitListPoints);
            createToast(waitListResponse.description, 'alert-success', 'message-content');
            let withdrawRow = `<tr
          data-area-name = "${areaName}" 
          data-course-name = "${courseName}"
          data-course-with-division-name = "${courseName}-${division}" 
          data-acad-session = "${acadSession}" 
          data-division-batch-lid = "${divisionBatchId}"
          data-faculty-id = "${facultyId}"
          data-credits = "${credits}"
          data-max-seats = "${available}"
          data-acad-session-id = "${acadSessionId}"
          data-course-id = "${courseId}"
          data-course-lid = "${courseLid}"
          data-faculty-name = "${facultyName}"
          data-division = "${division}"
          data-course-time = "${courseTime}">
          <td class="id-column">${++lengthOfTable}</td>
          <td>${areaName}</td>
          <td>${courseName}-${division}
          </td>
          <td>${acadSession}</td>
          <td class='course-timing'>${courseTime}</td>
          <td>${credits}</td>
          <td>${available}</td>
          <td>0</td>
          <td>0</td>
          <td>
            <button class="btn border border-dark add-drop">
              <i class="fa-solid fa-circle-plus" style="color:#5ca4ea"></i>
            </button>
          </td>

          </tr>`
            $('#wait-list-availale-table tbody').append(withdrawRow);
            $(this).closest('tr').remove();
        } else {
            let waitListResponse = JSON.parse(result.error);
            createToast(waitListResponse.description, 'alert-danger', 'error-message');
        }
    })
    .catch(error => {
        let waitListResponse = JSON.parse(error.responseJSON.error);
        createToast(waitListResponse.description, 'alert-danger', 'error-message');
        return;
    });
});
});

</script>

<%- include('../partials/footerEnd.ejs') %>