<%- include('../partials/head') %>

<%- include('../partials/leftSidebarForStudent.ejs') %>
<%- include('../partials/header.ejs') %>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
  integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<div class="main-content">
  <div class="card card-custom-border-curv" id="available-course">
    <div class="card-header-custom d-flex justify-content-between p-1">
        <h3 class="ms-2">Available Course</h3>  
    </div>

    <div class="card-body table-responsive">
        <div class="d-flex">
          <% for(let acadSession of dropdownAcadSessionList) { %>
            <div class="col-sm-4 p-2">
              <button class="btn btn-light w-100 available-course-trimester available-course-trimester-selected"  data-acad-session-id = "<%- acadSession.sap_acad_session_id %>">
                <%-acadSession.acad_session %>
              </button>
            </div>
          <% } %>
        </div> 
        
       <div class="row">
          <div class="col-md-3 mt-4 ms-2">
            <select class="form-select form-control select2" id="area-filter">
              <option value="" selected>Select Area</option>
              <% for(let area of areaList) { %>
                <option value="<%-area.area_name %>" ><%-area.area_name %></option>
              <% } %>
            </select>
         </div>
          <div class="col-md-3 mt-4 ms-2">
              <select class="form-select form-control select2" id="course-filter">
                <option value="" selected>Select Course</option>
                <% for(let biddingCourse of courseList) { %>
                  <option value="<%-biddingCourse.course_id %>" ><%-biddingCourse.course_name %></option>
                <% } %>
              </select>
          </div>
        </div>
        
        <table class="table custom_row table-bordered mt-4 custom-table" id="available-course-table">
            <thead>
                <th>#</th>
                <th>Area</th>
                <th>Course</th>
                <th>Acad Session</th>
                <th>Course Timings</th>
                <th>Credits</th>
                <th>Total Seats</th>
                <th>Remaining Seats</th>
                <th>Faculty</th>
                <th>Favourite</th>
            </thead>
            <tbody>     
         </table>
  </div>
    </div>
  </div>  
</div>
<%- include('../partials/footer.ejs') %>
<script>
$(document).ready(function() {
    let active = `<%- active %>`;
    $('#sidebar .side-menu li.' + active).addClass('active');

    let availableCourseListData = `<%- JSON.stringify(availableCourseList) %>`;
    let availableCourseList = JSON.parse(availableCourseListData);
    let favCourseId = [];

    let favCourseList = JSON.parse(`<%- JSON.stringify(favCourseList) %>`);
        favCourseList.forEach((ele, index) => {
         favCourseId.push(ele.course_id);
     });

    availableCourses(availableCourseList);

        $('.available-course-trimester').each((index, availableCourse) =>{
          $(availableCourse).css('--available-trimester-active', $(availableCourse).innerHeight() + 'px');
        })
        
        $('#available-course-table tbody').on('click', '.add-favourite', async function () {
        $(this).children('i').toggleClass('d-none');
        $(this).children('.added-star').toggleClass('d-none');
        let courseId = $(this).closest('tr').data('course-id');
        let divisionBatchId = $(this).closest('tr').data('division-batch-lid');
        let studentLid = $('#student-data').data('student-lid');
        let division = $(this).closest('tr').data('division');
        let isFavourite = $(this).children('i').hasClass('d-none') ? 1 : 0;

        if (isFavourite && favCourseId.includes(courseId)) {
            let alreadySelectedCourse = $(`#available-course-table tbody tr[data-course-id="${courseId}"]`);
            for (let i = 0; i < alreadySelectedCourse.length; i++) {
                let ele = alreadySelectedCourse[i];
                if ($(ele).data('division-batch-lid') != divisionBatchId) {
      
                    let customMessage = {
                        favourite_heading: 'Confirmation',
                        favourite_message: `You've already favourited ${$(ele).data('course-name')} for the course. Would you like to add ${division} to favorites?`,
                        favourite_label_for_success: 'Yes',
                        favourite_label_for_cancel: 'NO'
                    };

                    let favResponse = await createConfirmation(customMessage);
                    if(!favResponse){
                      $(this).children('i').toggleClass('d-none');
                      $(this).children('.added-star').toggleClass('d-none');
                      return;
                    }
                }
            }
        }

        if (isFavourite) {
            favCourseId.push(courseId);
        }

        let favCourse = {
            student_lid: studentLid,
            div_batch_lid: divisionBatchId,
            is_favourite: isFavourite
        };

        let ApiObj = {
            type: 'POST',
            url: '/student/available-course/add-favourite',
            data: {
                addFavCourse: JSON.stringify(favCourse)
            },
            dataType: 'JSON',
        };

        ajaxApi(ApiObj)
            .then(result => {
                console.log('values of result', result);
            })
            .catch(error => {
                showError(JSON.stringify(error.responseJSON));
            });
    });


    $('#available-course').on('click', '.available-course-trimester', function() {
       resetBiddingTrimester('available-course-table', 'available-course-trimester-selected');
       selectBiddingTrimester($(this), 'available-course-trimester-selected', 'available-trimester-active');
       $(this).removeClass('border');
       $(this).closest('div').siblings().find('button').addClass('border');

       let acadSessionId = $(this).data('acad-session-id');
       
        let ApiObj = {
          type: 'POST',
          url: '/student/available-course/course-by-acadsession',
          data:{
            acadSessionId: acadSessionId
          },
          dataType :'JSON',
        }
        ajaxApi(ApiObj).then(result =>{
        
          let courseName = `<option  >Select Course</option>`;
              if (result.courseName.length > 0) {
                  result.courseName.forEach(element => {
                    courseName += `<option value="${element.course_id}">${element.course_name}</option>`;
                  });
              } else {
                courseName += `<option value="">No Course Found!</option>`;
              }

              $("#course-filter").html(courseName);
              availableCourses(result.availableCourseList);
          
        }).catch(error =>{
          showError(JSON.stringify(error.responseJSON))
        })
    });

    $('#course-filter').on('change', function() {
        let courseId = $(this).val();
        let acadSessionId = $('button.available-course-trimester-selected').data('acad-session-id');

        let ApiObj = {
             type: 'POST',
             url: '/student/available-course/course',
             data: {
                    courseId: courseId,
                    acadSessionId:acadSessionId 
              },
              dataType: 'JSON'
            };

          ajaxApi(ApiObj).then(result => {
            availableCourses(result.availableCourseList);
            }).catch(error => {
                    showError(JSON.stringify(error.responseJSON))
                });
      });
       
      $('#area-filter').on('change', function() {
        let areaName = $(this).val();
        let acadSessionId = $('button.available-course-trimester-selected').data('acad-session-id');
        acadSessionId = acadSessionId == undefined?'':acadSessionId;
     
        let ApiObj = {
             type: 'POST',
             url: '/student/available-course/course-by-area',
             data: {
                    areaName: areaName,
                    acadSessionId:acadSessionId 
              },
              dataType: 'JSON'
            };

          ajaxApi(ApiObj).then(result => {
            let courseName = `<option  >Select Course</option>`;
              if (result.courseName.length > 0) {
                  result.courseName.forEach(element => {
                    courseName += `<option value="${element.course_id}">${element.course_name}</option>`;
                  });
              } else {
                courseName += `<option value="">No Course Found!</option>`;
              }

              $("#course-filter").html(courseName);
              availableCourses(result.availableCourseList);
            }).catch(error => {
                    showError(JSON.stringify(error.responseJSON))
                });
      });

function availableCourses(biddingCourseList) {
 
  $('#available-course-table tbody').empty();
  biddingCourseList.forEach(function(biddingCourse, index) {
    
    let foundCourse = favCourseList.find(function(favCourse) {
    return favCourse.div_batch_lid === biddingCourse.division_batch_lid;
    });

    let { division_batch_lid: divisionBatchId, faculty_id: facultyId } = biddingCourse;
    let existingElement = $(`#available-course-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
    let existingFaculty = existingElement.filter(`[data-faculty-id="${facultyId}"]`);
    let otherFacultyExists = existingElement.not(existingFaculty);
    let lengthOfTable = $('#bidding-trimester-select-table tbody tr').length;

    if (existingElement.length === 0) {
      let newRow = `<tr 
         data-area-name = "${biddingCourse.area_name}" 
         data-course-name = "${biddingCourse.course_name}-${biddingCourse.division}" 
         data-acad-session = "${biddingCourse.acad_session}" 
         data-division-batch-lid = "${biddingCourse.division_batch_lid}"
         data-faculty-id = "${biddingCourse.faculty_id}"
         data-credits = "${biddingCourse.credits}"
         data-max-seats = "${biddingCourse.max_seats}"
         data-acad-session-id = "${biddingCourse.sap_acad_session_id}"
         data-course-id = "${biddingCourse.course_id}"
         data-division = "${biddingCourse.division}"
         >

          <td>${++lengthOfTable}</td>
          <td>${biddingCourse.area_name}</td>
          <td>${biddingCourse.course_name}-${biddingCourse.division}</td>
          <td>${biddingCourse.acad_session}</td>
          <td class='course-timing'>${biddingCourse.day_name}(${biddingCourse.StartTime} to ${biddingCourse.EndTime})</td>
          <td>${biddingCourse.credits}</td>
          <td>${biddingCourse.max_seats}</td>
          <td>0</td>
          <td>${biddingCourse.faculty_name}</td>
          <td>
            <button class="btn add-favourite">              
               <i class="fa-regular fa-star add-star" style="height:24px;width:24px;"></i>
               <img class="d-none added-star" src="/image/student/body-part-image/available-course/added-star.png" alt='added'>
            </button>
          </td>
        </tr>`;
      $('#available-course-table tbody').append(newRow);
      let foundCourse = favCourseList.find(function(favCourse) {
       return favCourse.div_batch_lid === biddingCourse.division_batch_lid;
       });

      if (foundCourse) {
          $(`tr[data-division-batch-lid="${biddingCourse.division_batch_lid}"] .add-star`).addClass('d-none');
          $(`tr[data-division-batch-lid="${biddingCourse.division_batch_lid}"] .added-star`).removeClass('d-none');
      }

    } else {
      let courseTiming = `<div>${biddingCourse.day_name}(${biddingCourse.StartTime} to ${biddingCourse.EndTime})`;
      let contentToAppend = otherFacultyExists.length ? `${courseTiming} - ${biddingCourse.faculty_name})` : `${courseTiming}`;
      existingElement.children('.course-timing').append(contentToAppend);
    }
    
  });
}

    async function createConfirmation(customMessage) {
        return await ConfirmationCustom(customMessage);
       
    }
    function ConfirmationCustom(message) {
        return new Promise((success, failed) => {
            let dialog = document.createElement('div');
            dialog.classList.add('dialog');
        
            let dialogBox = document.createElement('div');
            dialogBox.classList.add('dialogBox');
            dialog.appendChild(dialogBox);
            
            let messageBox = document.createElement('div');
            messageBox.classList.add('messageBox');
            dialogBox.appendChild(messageBox);
        
            let dialogHeading = document.createElement('h1');
            dialogHeading.classList.add('dialogHeading');
            dialogHeading.textContent = `${message.favourite_heading}`
            messageBox.appendChild(dialogHeading); 
        
            let dialogMessage = document.createElement('p');
            dialogMessage.classList.add('dialogMessage');
            dialogMessage.textContent = `${message.favourite_message}`;
            messageBox.appendChild(dialogMessage);
        
            let buttonContainer = document.createElement('div');
            buttonContainer.classList.add('buttonContainer');
            dialogBox.appendChild(buttonContainer);
        
            let okButton = document.createElement('button');
            okButton.classList.add('okButton');
            okButton.textContent = `${message.favourite_label_for_success}`;
            buttonContainer.appendChild(okButton);
        
            let cancelButton = document.createElement('button');
            cancelButton.classList.add('cancelButton');
            cancelButton.textContent = `${message.favourite_label_for_cancel}`;
            buttonContainer.appendChild(cancelButton);
        
            document.querySelector('body').append(dialog);
            okButton.addEventListener('click', function () {
                document.querySelector('.dialog').remove();
                success(true);
            });
        
            cancelButton.addEventListener('click',  function (){
                document.querySelector('.dialog').remove();
                success(false);
            });
        })
    }
});
</script>

<%- include('../partials/footerEnd.ejs') %>