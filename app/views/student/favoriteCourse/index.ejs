<%- include('../partials/head') %>
<%- include('../partials/leftSidebarForStudent.ejs') %>
<%- include('../partials/header.ejs') %>

<div class="main-content">
  <div class="card card-custom-border-curv" id="available-course">
    <div class="card-header-custom d-flex justify-content-between p-1">
      <h3 class="ms-2">Available Courses</h3>  
    </div>

    <div class="card-body table-responsive">
      <div class="d-flex">
        <div class="col-md-2 mt-4 ms-4">
          <select class="form-select form-control select2" id="session-name-filter">
            <option value="-1" selected disabled>Select Acad Session</option>
            <% for (let acadSession of dropdownAcadSessionList) { %>
              <option value="<%- acadSession.id %>"><%- acadSession.name %></option>
            <% } %>
          </select>
        </div>
        <div class="col-md-3 mt-4 ms-4">
          <select class="form-select form-control select2" id="area-filter">
            <option value="-1" selected disabled>Select Area</option>
          </select>
        </div>
        <div class="col-md-3 mt-4 ms-4">
          <select class="form-select form-control select2" id="course-filter">
            <option value="-1" selected disabled>Select Course</option>
            <% for (let biddingCourse of courseList) { %>
              <option value="<%- biddingCourse.course_id %>"><%- biddingCourse.course_name %></option>
            <% } %>
          </select>
        </div>
      </div>

      <table class="table table-bordered mt-4" id="available-course-table">
        <thead>
          <th>#</th>
          <th>Area</th>
          <th>Course</th>
          <th>Acad Session</th>
          <th>Course Timings</th>
          <th>Credits</th>
          <th>Total Seats</th>
          <th>Faculty</th>
          <th>Favourite</th>
        </thead>
        <tbody> 
            
        </tbody>
      </table>
    </div>
  </div>
</div>

<%- include('../partials/footer.ejs') %>
<script>
  $(document).ready(function() {
    setActiveMenuItem(`<%- active %>`);

    let availableCourseListData = `<%- JSON.stringify(availableCourseList) %>`;
    let availableCourseList = JSON.parse(availableCourseListData);
    let favCourseId = [];

    let favCourseList = JSON.parse(`<%- JSON.stringify(favCourseList) %>`);
    favCourseList.forEach((ele, index) => {
      favCourseId.push(ele.course_id);
    });

    availableCourses(availableCourseList);

    $('#available-course-table tbody').on('click', '.add-favourite', async function () {
      $(this).children('i').toggleClass('d-none');
      $(this).children('.added-star').toggleClass('d-none');
      let courseId = $(this).closest('tr').data('course-id');
      let divisionBatchId = $(this).closest('tr').data('division-batch-lid');
      let studentLid = $('#student-data').data('student-id');
      let division = $(this).closest('tr').data('division');
      let isFavourite = $(this).children('i').hasClass('d-none') ? 1 : 0;

      if (isFavourite && favCourseId.includes(courseId)) {
        let alreadySelectedCourse = $(`#available-course-table tbody tr[data-course-id="${courseId}"]`);
        for (let i = 0; i < alreadySelectedCourse.length; i++) {
          let ele = alreadySelectedCourse[i];
          if ($(ele).data('division-batch-lid') != divisionBatchId) {
            let customMessage = {
              favourite_heading: 'Confirmation',
              favourite_message: `You've already favorited ${$(ele).data('course-name')} for the course. Would you like to add ${division} to favorites?`,
              favourite_label_for_success: 'Yes',
              favourite_label_for_cancel: 'NO'
            };

            let favResponse = await createConfirmation(customMessage);
            if (!favResponse) {
              $(this).children('i').toggleClass('d-none');
              $(this).children('.added-star').toggleClass('d-none');
              return;
            }
          }
        }
      }

      if (isFavourite) {
        favCourseId.push(courseId);
      }

      let favCourse = {
        student_lid: studentLid,
        div_batch_lid: divisionBatchId,
        is_favourite: isFavourite
      };

      let ApiObj = {
        type: 'POST',
        url: '/student/available-course/add-favourite',
        data: {
          addFavCourse: JSON.stringify(favCourse)
        },
        dataType: 'JSON',
      };

      ajaxApi(ApiObj)
        .then(result => {
        })
        .catch(error => {
          let errorMessage = JSON.stringify(error.responseJSON.description);
          createToast({ title: "Fail", msg: errorMessage, type: "negative" });
        });
    });

    $('#session-name-filter').on('change', function(){
      let id = $('#session-name-filter').val();
      
      let ApiObj = {
        type: 'POST',
        url: '/student/available-course/by-acadsession',
        data:{
          acadSessionId: id
        },
        dataType :'JSON',
      }
      ajaxApi(ApiObj).then(result =>{
        let areaName = `<option value="-1" selected disabled>Select Area</option>`;
        if (result.areaList.length > 0) {
          result.areaList.forEach(element => {
            areaName += `<option value="${element.area_name}">${element.area_name}</option>`;
          });
        } else {
          areaName += `<option value="">No Area Found!</option>`;
        }

        $("#area-filter").html(areaName);
        availableCourses(result.availableCourseList);
      }).catch(error =>{
      })
    });

    $('#course-filter').on('change', function() {
      let courseId = $(this).val();
      let acadSessionId = $('#session-name-filter').val();
      
      let ApiObj = {
        type: 'POST',
        url: '/student/available-course/course',
        data: {
          courseId: courseId,
          acadSessionId: acadSessionId 
        },
        dataType: 'JSON'
      };

      ajaxApi(ApiObj).then(result => {
        availableCourses(result.availableCourseList);
      }).catch(error => {
        let errorMessage = JSON.stringify(error.responseJSON.description);
        createToast({ title: "Fail", msg: errorMessage, type: "negative" });
      });
    });

    $('#area-filter').on('change', function() {
      let areaName = $(this).val();
      let acadSessionId = $('#session-name-filter').val();

      let ApiObj = {
        type: 'POST',
        url: '/student/available-course/course-by-area',
        data: {
          areaName: areaName,
          acadSessionId: acadSessionId 
        },
        dataType: 'JSON'
      };

      ajaxApi(ApiObj).then(result => {
        let courseName = `<option  value="-1" selected disabled>Select Course</option>`;
        if (result.courseName.length > 0) {
          result.courseName.forEach(element => {
            courseName += `<option value="${element.course_id}">${element.course_name}</option>`;
          });
        } else {
          courseName += `<option value="">No Course Found!</option>`;
        }

        $("#course-filter").html(courseName);
        availableCourses(result.availableCourseList);
      }).catch(error => {
            let errorMessage = JSON.stringify(error.responseJSON.description);
            createToast({ title: "Fail", msg: errorMessage, type: "negative" });
      });
    });

    function availableCourses(biddingCourseList) {
      
      $('#available-course-table tbody').empty();
      let lengthOfTable = $('#bidding-trimester-select-table tbody tr').length;
      biddingCourseList.forEach(function(biddingCourse, index) {
        let foundCourse = favCourseList.find(function(favCourse) {
          return favCourse.div_batch_lid === biddingCourse.division_batch_lid;
        });

        let { division_batch_lid: divisionBatchId, faculty_id: facultyId } = biddingCourse;
        let existingElement = $(`#available-course-table tbody tr[data-division-batch-lid="${divisionBatchId}"]`);
        let existingFaculty = existingElement.filter(`[data-faculty-id="${facultyId}"]`);
        let otherFacultyExists = existingElement.not(existingFaculty);
        

        if (existingElement.length === 0) {
          let newRow = `<tr 
            data-area-name="${biddingCourse.area_name}" 
            data-course-name="${biddingCourse.course_name}-${biddingCourse.division}" 
            data-acad-session="${biddingCourse.acad_session}" 
            data-division-batch-lid="${biddingCourse.division_batch_lid}"
            data-faculty-id="${biddingCourse.faculty_id}"
            data-credits="${biddingCourse.credits}"
            data-max-seats="${biddingCourse.max_seats}"
            data-acad-session-id="${biddingCourse.sap_acad_session_id}"
            data-course-id="${biddingCourse.course_id}"
            data-division="${biddingCourse.division}"
          >
            <td>${++lengthOfTable}</td>
            <td>${biddingCourse.area_name}</td>
            <td>${biddingCourse.course_name}-${biddingCourse.division}</td>
            <td>${biddingCourse.acad_session}</td>
            <td class='course-timing'>${biddingCourse.day_name}(${biddingCourse.StartTime} to ${biddingCourse.EndTime})</td>
            <td>${biddingCourse.credits}</td>
            <td>${biddingCourse.max_seats}</td>
            <td>${biddingCourse.faculty_name}</td>
            <td>
              <button class="btn add-favourite">              
                <i class="fa-regular fa-star add-star" style="height:24px;width:24px;"></i>
                <img class="d-none added-star" src="/image/student/body-part-image/available-course/added-star.png" alt='added'>
              </button>
            </td>
          </tr>`;
          $('#available-course-table tbody').append(newRow);

          if (foundCourse) {
            $(`tr[data-division-batch-lid="${biddingCourse.division_batch_lid}"] .add-star`).addClass('d-none');
            $(`tr[data-division-batch-lid="${biddingCourse.division_batch_lid}"] .added-star`).removeClass('d-none');
          }

        } else {
          
          let courseTiming = `<div>${biddingCourse.day_name}(${biddingCourse.StartTime} to ${biddingCourse.EndTime})`;
          let contentToAppend = otherFacultyExists.length ? `${courseTiming} - ${biddingCourse.faculty_name})` : `${courseTiming}`;
          existingElement.children('.course-timing').append(contentToAppend);
        
        }
      });
    }

    async function createConfirmation(customMessage) {
      return await ConfirmationCustom(customMessage);
    }

    function ConfirmationCustom(message) {
      return new Promise((success, failed) => {
        let dialog = document.createElement('div');
        dialog.classList.add('dialog');

        let dialogBox = document.createElement('div');
        dialogBox.classList.add('dialogBox');
        dialog.appendChild(dialogBox);

        let messageBox = document.createElement('div');
        messageBox.classList.add('messageBox');
        dialogBox.appendChild(messageBox);

        let dialogHeading = document.createElement('h1');
        dialogHeading.classList.add('dialogHeading');
        dialogHeading.textContent = `${message.favourite_heading}`
        messageBox.appendChild(dialogHeading); 

        let dialogMessage = document.createElement('p');
        dialogMessage.classList.add('dialogMessage');
        dialogMessage.textContent = `${message.favourite_message}`;
        messageBox.appendChild(dialogMessage);

        let buttonContainer = document.createElement('div');
        buttonContainer.classList.add('buttonContainer');
        dialogBox.appendChild(buttonContainer);

        let okButton = document.createElement('button');
        okButton.classList.add('okButton');
        okButton.textContent = `${message.favourite_label_for_success}`;
        buttonContainer.appendChild(okButton);

        let cancelButton = document.createElement('button');
        cancelButton.classList.add('cancelButton');
        cancelButton.textContent = `${message.favourite_label_for_cancel}`;
        buttonContainer.appendChild(cancelButton);

        document.querySelector('body').append(dialog);
        okButton.addEventListener('click', function () {
          document.querySelector('.dialog').remove();
          success(true);
        });

        cancelButton.addEventListener('click',  function (){
          document.querySelector('.dialog').remove();
          success(false);
        });
      });
    }
  });
</script>

<%- include('../partials/footerEnd.ejs') %>
