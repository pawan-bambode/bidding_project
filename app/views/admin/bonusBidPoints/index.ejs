<%- include('../partials/head') %>
<%- include('../partials/leftSidebar.ejs') %>
<%- include('../partials/header.ejs') %>
<%- include('../partials/bread.ejs') %>

    <div class="card card-custom-border-curv">
        <div class="card-header-custom d-flex justify-content-between p-1">
            <h4 class="ms-2">Bonus Bid Points </h4>
            <button type="button" class="btn add-btn-plus me-2" data-bs-target="#add-bonus-points-modal" data-bs-toggle="modal">
                <i class="fas fa-plus"></i>
            </button>
        </div>
        <div class="card-body table-responsive">
            <div class="d-flex justify-content-between">
                <div>
                </div>
            </div>

            <table class="table table-bordered mt-4" id="bonus-points-table">
                <thead>
                    <th>#</th>
                    <th>Round Name</th>
                    <th>Bonus Points</th>
                    <th>Actions</th>
                </thead>
                <tbody>
                    <% let count = 1 %>
                    <% for (let bonusPoint of bonusBidPoints) { %>
                        <tr data-id="<%- bonusPoint.id %>">
                            <td><%- count++ %></td>
                            <td><%- bonusPoint.round_name %></td>
                            <td><%- bonusPoint.incrementPoints %></td>
                            <td>
                                <a class="update-bonus-points" data-bs-target="#update-bonus-points" data-bs-toggle="modal" data-id="<%- bonusPoint.id %>" data-round-name="<%- bonusPoint.round_name %>" data-bonus-points="<%- bonusPoint.incrementPoints %>">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a class="delete-bonus-points">
                                    <i class="fa-solid fa-trash text-danger"></i>
                                </a>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

    <div class="modal" id="add-bonus-points-modal" data-bs-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Bonus Bid Points</h5>
                    <button class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row empty">
                        <div class="col-md-12">
                            <label class="form-label mb-2" for="bonus-bid-points-input">Bonus Bid Points:</label>
                            <input class="form-control is-empty is-number" id="bonus-bid-points-input" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button class="btn btn-primary" id="bonus-bid-points">Add</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="update-bonus-points" data-bs-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update Bonus Points</h5>
                    <button class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row empty">
                        <div>
                            <input type="hidden" id="bonus-id">
                            <label class="mb-2" for="round-name">Round Name:</label>
                            <input class="form-control is-empty round-name" type="text" id="round-name" autocomplete="off" disabled>
                        </div>
                    </div>
                    <div class="row empty">
                        <div class="col-md-12">
                            <label class="mb-2" for="bonus-points">Bonus Points:</label>
                            <input class="form-control is-empty is-number" type="text" id="bonus-points" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button class="btn btn-primary" id="update">Update</button>
                </div>
            </div>
        </div>
    </div>
</div>
<%- include('../partials/footer.ejs') %>

<script>
$(document).ready(function () {

    let active = `<%- active %>`;
    $('#sidebar .side-menu li.' + `<%- active %>`).addClass('active');

    $('#add-bonus-points-modal').on('click', '#bonus-bid-points', function () {
        let bonusBidPoints = $('#bonus-bid-points-input').val();
        let isValidInput = isModalFieldEmpty('#add-bonus-points-modal .modal-body');
        if (isValidInput) {
            let inputJson = {
                round_lid: 1,
                points_to_increase_after_demand: bonusBidPoints
            };
            let ApiObj = {
                type: 'POST',
                url: '/admin/bonus-bid-points/add',
                data: {
                    InputJson: JSON.stringify(inputJson)
                },
                datatype: 'JSON'
            };
            ajaxApi(ApiObj)
                .then(result => {
                    createToast({ title: "Success", msg: response.description, type: "positive", showingTime:"1000"});
                    setTimeout(function(){location.reload();},1000);
                })
                .catch(error => {
                    let errorMessage = JSON.stringify(error.responseJSON.description);
                    createToast({ title: "Fail", msg: errorMessage, type: "negative", showingTime:"1000"});
                });
        }
    });
    
    $('#bonus-points-table').on('click', '.delete-bonus-points', function () {

        let deleteId = $(this).closest('tr').data('id');
        let ApiObj = {
            type: 'POST',
            url: '/admin/bonus-bid-points/delete',
            data: {
                Id: deleteId
            },
            datatype: 'JSON'
        };
        ajaxApi(ApiObj)
            .then(result => {
                createToast({ title: "Success", msg: result.description, type: "positive", showingTime:"1000"});
                setTimeout(function(){location.reload();},1000);
            })
            .catch(error => {
                let errorMessage = JSON.stringify(error.responseJSON.description);
                createToast({ title: "Fail", msg: errorMessage, type: "negative", showingTime:"1000"});
            });
    });

    $('#bonus-points-table').on('click', '.update-bonus-points', function () {
        
        let roundName = $(this).data('round-name');
        let bonusPoints = $(this).data('bonus-points');
        let id = $(this).data('id');
        $('#round-name').val(roundName);
        $('#bonus-points').val(bonusPoints);
        $('#bonus-id').val(id);
    });

    $('#update-bonus-points').on('click', '#update', function () {

        let roundName = $('#round-name').val();
        let bonusPoints = $('#bonus-points').val().trim();
        let bonusPointId = $('#bonus-id').val().trim();
        let inputJson = {
            id: bonusPointId,
            points_to_increase_after_demand: bonusPoints
        };
        let isValidInput = isModalFieldEmpty('#update-bonus-points .modal-body');
        if (isValidInput) {
            let ApiObj = {
                type: 'POST',
                url: '/admin/bonus-bid-points/update',
                data: {
                    inputJson: JSON.stringify(inputJson)
                },
                datatype: 'JSON'
            };
            ajaxApi(ApiObj)
                .then(result => {
                    createToast({ title: "Success", msg: result.description, type: "positive", showingTime:"1000"});
                    setTimeout(function(){location.reload();},1000);
                })
                .catch(error => {
                    let errorMessage = JSON.stringify(error.responseJSON.description);
                    createToast({ title: "Fail", msg: errorMessage, type: "negative", showingTime:"1000"});
                });
        }
    });
});

</script>

<%- include('../partials/footerEnd.ejs') %>
