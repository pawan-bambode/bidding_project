<%- include('../partials/head') %>
<%- include('../partials/leftSidebar.ejs') %>
<%- include('../partials/header.ejs') %>
<%- include('../partials/bread.ejs') %>

    <div class="card card-custom-border-curv">
        <div class="card-header-custom d-flex justify-content-between p-1">
            <h4 class="ms-2">Students</h4>
            <div>
                <button class="btn btn-danger disabled" id="delete-students-data">Delete All Student Data</button>
                <button type="button" class="btn btn-success me-2" data-bs-target="#upload-student-modal" data-bs-toggle="modal">Upload Student Data</button> 
            </div> 
        </div>
        <div class="card-body table-responsive">
            <div class="d-flex justify-content-between">
                <div>
                    <label>Show Entries</label>
                    <select class="form-select" id="changeEntry">
                        <%for(let page of locals.page_filter){%>
                            <option value="<%-page%>"><%-page%></option>
                        <%}%>
                    </select>
                </div>
                <div class="col-md-3 mt-4">
                    <select class="form-select form-control select2" id="program-name-filter">
                        <option value="-1" selected>Select Program</option>
                        <%for(let program of programList){%>
                            <option value="<%-program.program_id%>"><%-program.program_name%></option>
                        <%}%>
                    </select>
                </div>
                <div class="col-md-3 mt-4">
                    <select class="form-select form-control select2" id="student-name-filter">
                      <option value="-1" selected>Select Student</option>
                    </select>
                </div>
            <div>
                <div class="table-searchbar-container d-flex justify-content-around p-1">
                    <button type="button" id="searchkeyword-button" class="border-0 outline-0">
                        <i class="fas fa-search"></i>
                    </button>
                    <input type="search" id="searchkeyword" placeholder="Enter keywords" class="table-searchbar" autocomplete="off" size="24">
                </div>
            </div>
        </div>

        <table class="table table-bordered mt-4" id="student-data-table">
            <thead>
                <th>#</th>
                <th>Student Code</th>
                <th>Roll No.</th>
                <th>Student Name</th>
                <th>Email</th>
                <th>Program Name</th>
                <th>Bid Points</th>
                <th>Year of Joining</th>
                <th>Previous Elective Credits</th>
                <th>Actions <input class="d-none" type="checkbox" name="student-data-checkbox" id="student-data-checkbox"></th>
            </thead>
            <tbody>
             
                <% let count = 1 %>

                <%for(let studentData of studentDataList) { %>
                    <tr 
                        data-id="<%-studentData.id %>" 
                        data-student-sap-id="<%-studentData.sap_id %>" 
                        data-student-roll-no="<%- studentData.roll_no %>" 
                        data-student-name = "<%- studentData.student_name %>" 
                        data-student-email ="<%- studentData.email %>" 
                        data-student-bidding-points="<%- studentData.bid_points %>" 
                        data-student-year-of-join ="<%- studentData.year_of_joining %>" 
                        data-student-pre-ele-credits  ="<%- studentData.previous_elective_credits %>">

                            <td><%- count++ %></td>
                            <td><%-studentData.sap_id %></td> 
                            <td><%-studentData.roll_no %></td> 
                            <td><%-studentData.student_name %></td> 
                            <td><%-studentData.email %></td> 
                            <td><%-studentData.program_name %></td> 
                            <td><%-studentData.bid_points %></td> 
                            <td><%-studentData.year_of_joining %></td>
                            <td><%-studentData.previous_elective_credits %></td>  
                            <td>
                                <a class="edit-student-data" data-bs-target="#edit-student-data" data-bs-toggle="modal">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a class="delete-student-data">
                                    <i class="fa-solid fa-trash text-danger"></i>
                                </a>
                                <input class="d-none checkbox-student-data" type="checkbox" name="student-data" data-id="<%- studentData.id %>" >
                            </td>
                    </tr>
                <%}%>
            </tbody>
        </table>
        <div class="d-flex justify-content-between">
            <div>
                <p>Total entries:&nbsp;
                    <span id="page-no"><%- pageCount%></span>
                </p>
            </div>
            <div>
                <p id="pagination" class="pagination-search"></p>
            </div>
        </div>
    </div>
 
    <div class="modal" id="edit-student-data" data-bs-backdrop="static">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update Student Data</h5>
                    <button class="btn-close modal-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row empty">
                        <div class="col-md-6">
                            <input type="hidden" id="student-id">
                            <label class="mb-2" for="student-name">Student Name :</label>
                            <input class="form-control is-empty" type="text" id="student-name" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                        <div class="col-md-6">
                            <label class="mb-2" for="student-email">Email :</label>
                            <input class="form-control is-empty" type="text" id="student-email" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                    </div>
                    <div class="row empty">
                        <div class="col-md-6">
                            <label class="mb-2" for="bidding-points">Bid Points :</label>
                            <input class="form-control is-empty is-number" type="text" id="bidding-points" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                        <div class="col-md-6">
                            <label class="mb-2" for="year-of-joining">Year of Joining :</label>
                            <input class="form-control is-empty is-number" type="text" id="year-of-joining" autocomplete="off"> 
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                    </div>
                    <div class="row empty">
                        <div class="col-md-6">
                            <label class="mb-2" for="previous-elective-credits">Previous Elective Credits :</label>
                            <input class="form-control is-empty is-number" type="text" id="previous-elective-credits" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>  
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button class="btn btn-primary" id="update-student-data">Update</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="upload-student-modal" data-bs-keyboard="false" data-bs-backdrop="static" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content"> 
                <div class="modal-header">
                    <h5 class="modal-title">Upload Student Data</h5>
                        <button type="button" class="btn-close modal-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="d-flex">
                        <label class="form-label me-3">Import Student Data :</label>
                        <form enctype="multipart/form-data"  method="post" id="upload-student-data-form">
                        <input type="file" name="import-student-data" id="import-student-data" accept=".xlsx">
                    </div>
                    <div class="d-flex justify-content-between align-item-center mt-5">
                        <input type="submit" class="btn btn-success mt-2 d-none" id="upload-student-data-button" value="Upload Student Data">
                        </form> 
                        <a href="/admin/generate-excel-student" download="sampleForImportStudentData.xlsx" name="sample-for-import-student" class="text-decoration-none align-self-end">Sample for Import Student Data</a>
                    </div> 
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary modal-close" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/footer.ejs') %>

<script>
$(document).ready(function() {
    $('.select2').select2();
    
    let test = '<%- pageCount %>';
    let rowCount = $('#changeEntry').val();
    $('#page-no').html(test);
    paginationData(rowCount, parseInt(test));
    setActiveMenuItem(`<%- active %>`);

    if($('#student-data-table tbody tr').length > 0){ 
       $('#student-data-checkbox').removeClass('d-none');
    }

    $('#upload-student-modal').on('click', '.modal-close', function() {
        $('#import-student-data').val('');
        $('#upload-student-data-button').addClass('d-none');
    });
   
    $('#searchkeyword').on('input',function(){

        let searchValue = $(this).val().trim();
        let programId = $('#program-name-filter').val();
        let studentName = $('#student-name-filter').val();
        let showEntry = $('#changeEntry').val();
        let firstChild = $('#changeEntry :first-child').val(); 
        $('#changeEntry').val(firstChild);
        $.ajax({
            type:'POST',
            url:'/admin/student-data/search',
            data:{
                searchLetter:searchValue,
                programId:programId,
                showEntry:showEntry
            },

            success:function(data){
                paginationData(rowCount,data.length)
                AjaxtTable(data.data);
                $('#page-no').html(data.length);
            }
        })
    })

    $('#program-name-filter').on('change', function() {

        let programId = $(this).val();
        let showEntry = $('#changeEntry').val();
        let ApiObj = {
            type: 'POST',
            url: '/admin/student-data/program-id',
            data: {
                programId: programId,
                showEntry: showEntry
            },
            dataType: 'JSON'
        };
        ajaxApi(ApiObj)
            .then(result => {
                let studentName = `<option value="-1"  >Select Student Name</option>`;
                if (result.studentDataSapIdList.length > 0) {
                    result.studentDataSapIdList.forEach(element => {
                        studentName += `<option value="${element.sap_id}">${element.student_name}</option>`;
                    });
                    paginationData(showEntry,result.length)
                    AjaxtTable(result.data);
                } else {
                    studentName += `<option value="">No Session Found!</option>`;
                }
              
                $("#student-name-filter").html(studentName);
                AjaxtTable(result.data);
                $('#page-no').html(result.length);
                $('#searchkeyword').val('');    
            })
            .catch(error => {
                let errorMessage = JSON.stringify(error.responseJSON.description);
                createToast({ title: "Alert", msg: errorMessage, type: "negative" });
            });
    });

    $('#student-name-filter').on('change', function() {

        let studentSapId = $(this).val();
        let programId = $('#program-name-filter').val();
        let showEntry = $('#changeEntry').val();
        let ApiObj = {
            type: 'POST',
            url: '/admin/student-data/student-id',
            data: {
                programId: programId,
                showEntry: showEntry,
                studentSapId: studentSapId
            },
            dataType: 'JSON'
        };
        ajaxApi(ApiObj)
            .then(result => {
                AjaxtTable(result.data);
                paginationData(showEntry,result.length);
                $('#page-no').html(result.length);
                $('#searchkeyword').val('');
            })
            .catch(error => {
                let errorMessage = JSON.stringify(error.responseJSON.description);
                createToast({ title: "Alert", msg: errorMessage, type: "negative" });
            });
    });

    $(".pagination-search").on('click','.pagination li',function(){

        let keyword = $("#searchkeyword").val();
        let pageNo = $(this).data('lp');
        let showEntry = $('#changeEntry').val();
        $.ajax({
            type: "POST",
            url: "/admin/student-data/search-by-letter",
            data: {
                searchLetter: keyword,
                pageNo: pageNo,
                showEntry:showEntry
            },
            success: function (data) { 
                AjaxtTable(data.data);
                $('#page-no').html(data.length);
            }
        });
    });

    $('#changeEntry').on('change',function(){

        let showEntry = $(this).val();
        let programId = $('#program-name-filter').val();
        let ApiObj = {
            type:'POST',
            url:'/admin/student-data/showEntry',
            data:{
                showEntry:showEntry,
                programId: programId
            },
            datatype:'JSON'
            }
            ajaxApi(ApiObj).then(result=>{
                paginationData(showEntry,result.length)
                AjaxtTable(result.data);
                $('#searchkeyword').val('');
            }).catch(error =>{
                let errorMessage = JSON.stringify(error.responseJSON.description);
                createToast({ title: "Alert", msg: errorMessage, type: "negative" });
            })    
    })
 
    $('#student-data-table').on('change','#student-data-checkbox', function() {

        if (this.checked) {
           $('.checkbox-student-data').removeClass('d-none');
           $('.checkbox-student-data').attr('checked','checked');
           $('.delete-student-data').addClass('d-none');
           $('#delete-students-data').removeClass('disabled');
           $('.edit-student-data').addClass('d-none');
        } else {
          $('.checkbox-student-data').addClass('d-none');
           $('.delete-student-data').removeClass('d-none');   
           $('#delete-students-data').addClass('disabled');  
           $('.edit-student-data').removeClass('d-none');
        }
    });

    $('#student-data-table').on('click','.edit-student-data',function(){
       
       let id = $(this).closest('tr').data('id');
       let studentName = $(this).closest('tr').data('student-name');
       let studentEmail = $(this).closest('tr').data('student-email');
       let studentBiddingPoints = $(this).closest('tr').data('student-bidding-points');
       let studentYearOfJoining = $(this).closest('tr').data('student-year-of-join');
       let studentPreviousElectiveCredits = $(this).closest('tr').data('student-pre-ele-credits');

       $('#edit-student-data #student-name').val(studentName);
       $('#edit-student-data #student-email').val(studentEmail);
       $('#edit-student-data #bidding-points').val(studentBiddingPoints);
       $('#edit-student-data #year-of-joining').val(studentYearOfJoining);
       $('#edit-student-data #previous-elective-credits').val(studentPreviousElectiveCredits);
       $('#edit-student-data #student-id').val(id); 
    })
      
    $('#import-student-data').on('change', function(){
        let importStudentData = $(this).val();
        if(importStudentData != ''){
            $('#upload-student-data-button').removeClass('d-none');
        }
    });

    $('#upload-student-data-form').on('submit', function(event) {

        event.preventDefault(); 
        var formData = new FormData(this); 

        $.ajax({
            type: 'POST',
            url: '/admin/upload-student-data', 
            data: formData,
            processData: false,
            contentType: false,

            success: function(response) {
                createToast({ title: "Success", msg: response.description, type: "positive", showingTime:"1000"});
                setTimeout(function(){location.reload();},1000);
            },

            error: function(xhr, status, error) {
                showError(JSON.stringify(xhr.responseJSON));
            }
        });
    });

    $('#delete-students-data').on('click', function () {
        let deleteAllStudentData = [];
        $('#student-data-table tbody tr td input[type="checkbox"]:checked').each(function (ele, index) {
            let studentSapId = Number($(index).data("id"));
            deleteStudentData = {
                id: studentSapId
            }
            deleteAllStudentData.push(deleteStudentData);
        });

        if(deleteAllStudentData.length > 0){
            ConfirmationForAllDelete('Are you sure to delete the selected student data ?').then(result =>{
                if(result){
                    let ApiObj = {
                        url:'/admin/student-data/delete-all',
                        type:'POST',
                        data:{deleteAllStudentData},
                        dataType:'JSON'
                    }
                    ajaxApi(ApiObj).then(result =>{
                        createToast({ title: "Success", msg: result.description, type: "positive", showingTime:"1000" });
                        setTimeout(function(){location.reload();},1000);   
                    }).catch(error =>{
                        let errorMessage = JSON.stringify(error.responseJSON.description);
                        createToast({ title: "Alert", msg: errorMessage, type: "negative", showingTime:"1000" });
                    })
                }
            });
        }  
    });
   
    $('#edit-student-data').on('click','#update-student-data', function(){
       
        let biddingSessionId = $('#biddingSessionDropdown').attr('data-session-id');
        let id = $('#edit-student-data #student-id').val();
        let studentName = $('#edit-student-data #student-name').val().replace(/\s+/g,' ').trim();;
        let studentEmail = $('#edit-student-data #student-email').val().replace(/\s+/g,' ').trim();;
        let bidPoints = $('#edit-student-data #bidding-points').val();
        let yearOfJoining = $('#edit-student-data #year-of-joining').val();
        let previousElectiveCredits = $('#edit-student-data #previous-elective-credits').val();

        let isRequiredFieldsEmpty = isModalFieldEmpty('#edit-student-data .modal-body');
            
        if (isRequiredFieldsEmpty) {
 
            let ApiObj = {
                type:'POST',
                url:'/admin/student-data/update',
                data: {  
                    id:id,
                    student_name: studentName,
                    email: studentEmail,
                    bid_points : bidPoints,
                    year_of_joining : yearOfJoining,
                    previous_elective_credits:previousElectiveCredits
                },
                dataType: 'JSON' 
            }
            ajaxApi(ApiObj).then(result => {
                createToast({ title: "Success", msg: result.description, type: "positive", showingTime:"1000" });
                setTimeout(function(){location.reload();},1000);   
            }).catch(error => {
                let errorMessage = JSON.stringify(error.responseJSON.description);
                createToast({ title: "Alert", msg: errorMessage, type: "negative", showingTime:"1000"});
            })
        }
    })

    $('#student-data-table').on('click','.delete-student-data', function(){
        let studentDataId = $(this).closest('tr').data('id');

        let ApiObj = {
            url:'/admin/student-data/delete',
            type:'POST',
            data:{
              studentDataId:studentDataId
            },
            dataType:'JSON'
        }
        ajaxApi(ApiObj).then(result =>{
            createToast({ title: "Success", msg: result.description, type: "positive", showingTime:"1000" });
            setTimeout(function(){location.reload();},1000);   
        }).catch(error =>{
            let errorMessage = JSON.stringify(error.responseJSON.description);
            createToast({ title: "Alert", msg: errorMessage, type: "negative", showingTime:"1000"});
        })

    })
   
    $('#edit-student-data').on('click', '.modal-close', function() {
        $(this).closest('.modal-content').find(`.is-in-valid`).addClass('d-none');
    });

});

function AjaxtTable(studentDataList) {

    if ($('#student-data-checkbox').prop('checked')) {
        $('#student-data-checkbox').prop('checked', false);
    }
    $("#student-data-table tbody").empty();
    let AjaxTable = ``;

    if (studentDataList.length > 0) {
        let count = 1;
        for(studentData of studentDataList) {
            
                AjaxTable +=
                `<tr data-id="${studentData.id}" 
                     data-student-sap-id="${studentData.sap_id}" 
                     data-student-roll-no="${studentData.roll_no}" 
                     data-student-name = "${studentData.student_name}" 
                     data-student-email ="${studentData.email}" 
                     data-student-bidding-points=" ${studentData.bid_points}" 
                     data-student-year-of-join ="${studentData.year_of_joining}" 
                     data-student-pre-ele-credits  ="${studentData.previous_elective_credits}">

                    <td>${count++}</td>
                    <td>${studentData.sap_id}</td>
                    <td>${studentData.roll_no}</td>
                    <td>${studentData.student_name}</td>
                    <td>${studentData.email}</td>
                    <td>${studentData.program_name}</td>
                    <td>${studentData.bid_points}</td>
                    <td>${studentData.year_of_joining}</td>
                    <td>
                        <a class="edit-student-data" data-bs-target="#edit-student-data" data-bs-toggle="modal">
                            <i class="fa fa-edit"></i>
                        </a>
                        <a class="delete-student-data">
                            <i class="fa-solid fa-trash text-danger"></i>
                        </a>
                        <input class="d-none checkbox-student-data" type="checkbox" name="student-data">
                    </td>
                </tr>`
            }
    } 
    $("#student-data-table tbody").html(AjaxTable);
} 

function ConfirmationForAllDelete(message) {

    return new Promise((success, failed) => {
        let dialog = document.createElement('div');
        dialog.classList.add('dialogConfirmation');
        
        let dialogBox = document.createElement('div');
        dialogBox.classList.add('dialogBox');
        dialog.appendChild(dialogBox);
        
        let messageBox = document.createElement('div');
        messageBox.classList.add('messageBox');
        dialogBox.appendChild(messageBox);

        let dialogHeading = document.createElement('h1');
        dialogHeading.classList.add('dialogHeading');
        dialogHeading.textContent = 'Confirmation';
        messageBox.appendChild(dialogHeading); 

        let dialogMessage = document.createElement('p');
        dialogMessage.classList.add('dialogMessage');
        dialogMessage.textContent = message;
        messageBox.appendChild(dialogMessage);

        let buttonContainer = document.createElement('div');
        buttonContainer.classList.add('buttonContainer');
        dialogBox.appendChild(buttonContainer);

        let yesButton = document.createElement('button');
        yesButton.classList.add('okButton');
        yesButton.textContent = 'Yes';
        buttonContainer.appendChild(yesButton);

        let noButton = document.createElement('button');
        noButton.classList.add('cancelButton');
        noButton.textContent = 'No';
        buttonContainer.appendChild(noButton);

        document.querySelector('body').append(dialog);
        yesButton.addEventListener('click', function () {
            document.querySelector('.dialogConfirmation').remove();
            success(true);
        });

        noButton.addEventListener('click',  function (){
            document.querySelector('.dialogConfirmation').remove();
            success(false);
        });
    })  
}   
</script>
  
<%- include('../partials/footerEnd.ejs') %>