
<%- include('../partials/head') %>
<%- include('../partials/leftSidebar.ejs') %>
<%- include('../partials/header.ejs') %>
<%- include('../partials/bread.ejs') %>

    <div class="card card-custom-border-curv">
        <div class="card-header-custom d-flex justify-content-between p-2">
            <h4 class="ms-2">Concentration Settings</h4>
            <button type="button" class="btn btn-danger ms-auto me-3" id="refresh-concentration-settings">
                <i class="fa-solid fa-rotate p-1"></i>Refresh
            </button>
        </div>

        <div class="card-body table-responsive">
            <div class="d-flex justify-content-between">
                <div>
                    <label>Show Entries</label>
                    <select class="form-select" id="changeEntry">
                        <% for (let page of locals.page_filter) { %>
                            <option value="<%- page %>"><%- page %></option>
                        <% } %>
                    </select>
                </div>
                <div>
                    <div class="table-searchbar-container d-flex justify-content-around p-1">
                        <button type="button" id="searchkeyword-button" class="border-0 outline-0">
                            <i class="fas fa-search"></i>
                        </button>
                        <input type="search" id="searchkeyword" placeholder="Enter keywords" class="table-searchbar" autocomplete="off" size="24">
                    </div>
                </div>
            </div>
            <table class="table table-bordered mt-4" id="concentration-settings-table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Concentration</th>
                        <th>Total Elective Credits</th>
                        <th>Maximum Credits per Area</th>
                        <th>No. of Areas to Cover</th>
                        <th>Minimum Credits per Area</th>
                        <th>Primary Area</th>
                        <th>Minimum Credits in Primary Area</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% let count = 1 %>
                    <% for (let concentrationSetting of concentrationSettings) { %>
                        <tr data-id="<%- concentrationSetting.id %>"
                            data-total-ele-credits="<%- concentrationSetting.totalCredits %>"
                            data-max-cre-per-area="<%- concentrationSetting.maxCreditsPerArea %>"
                            data-no-of-area-to-cover="<%- concentrationSetting.noofAreasToCover %>"
                            data-min-credits-per-area="<%- concentrationSetting.minCreditsPerArea %>"
                            data-name = "<%- concentrationSetting.name %>"
                            data-area-id = "<%- concentrationSetting.area_Id %>"
                            data-primary-area-name = "<%- concentrationSetting.primaryArea %>"
                            data-min-credits-in-primary-area="<%- concentrationSetting.minCreditsInPriArea %>">

                            <td><%- count++ %></td>
                            <td class="concentration-name"><%- concentrationSetting.name %></td>
                            <td><%- concentrationSetting.totalCredits %></td>
                            <td><%- concentrationSetting.maxCreditsPerArea %></td>
                            <td><%- concentrationSetting.noofAreasToCover %></td>
                            <td><%- concentrationSetting.minCreditsPerArea %></td>
                            <td><%- concentrationSetting.primaryArea %></td>
                            <td><%- concentrationSetting.minCreditsInPriArea %></td>
                            <td>
                                <a class="edit-concentration-settings" data-bs-toggle="modal" data-bs-target="#edit-concentration-setting-modal">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a class="text-danger delete-concentration-settings"><i class="fas fa-trash"></i></a>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
            <div class="d-flex justify-content-between">
                <div>
                    <p>Total entries :&nbsp;<span id="page-no"></span></p>
                </div>
                <div>
                    <p id="pagination" class="pagination-search"></p>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="edit-concentration-setting-modal" data-bs-backdrop="static">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update Concentration Settings</h5>
                    <button class="btn-close modal-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row empty">
                        <div class="col-md-6">
                            <input type="hidden" id="course-id">
                            <label class="mb-2 form-label" for="concentration-name">Concentration Name :</label>
                            <input class="form-control is-empty" type="text" id="concentration-name" autocomplete="off" disabled>
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>

                        <div class="col-md-6">
                            <label class="mb-2 form-label" for="total-elective-credits">Total Elective Credits :</label>
                            <input class="form-control is-empty is-number" type="text" id="total-elective-credits" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                    </div>

                    <div class="row empty">
                        <div class="col-md-6">
                            <label class="form-label mb-2" for="max-credits-per-area">Maximum Credits Per Area :</label>
                            <input class="form-control is-empty is-number" type="text" id="max-credits-per-area" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                        <div class="col-md-6">
                            <label class="mb-2 form-label" for="number-of-areas-to-cover">Number of Areas to Cover :</label>
                            <input class="form-control is-empty is-number" type="text" id="number-of-areas-to-cover" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                    </div>

                    <div class="row empty">
                        <div class="col-md-6">
                            <label class="form-label mb-2" for="min-credits-per-area">Minimum Credits Per Area :</label>
                            <input class="form-control is-empty is-number" type="text" id="min-credits-per-area" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                        <div class="col-md-6" id="primary-area-form">
                            <label class="mb-2 form-label" for="primary-area">Primary Area :</label>
                            <select class="form-control form-select select2 custom-select is-empty" id="primary-area">
                                <option  value="-1" selected>--Select Primary Area--</option>
                                <% for (let area of areaList) { %>
                                    <option value="<%- area.id %>" ><%- area.area_name %></option>
                                <% } %>
                            </select>
                            <p id="error-primary-area" class="text-danger d-none is-in-valid">Please Select Primary Area!</p>
                        </div>
                    </div>

                    <div class="row empty">
                        <div class="col-md-6" id="primary-area-minimum">
                            <label class="form-label mb-2" for="min-credits-in-primary-area">Minimum Credits in Primary Area :</label>
                            <input class="form-control is-empty is-number" type="text" id="min-credits-in-primary-area" autocomplete="off">
                            <span class="text-danger d-none is-in-valid"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary modal-close" data-bs-dismiss="modal">Close</button>
                    <button class="btn btn-primary" id="update-concentration-settings">Update</button>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/footer.ejs') %> 

<script>
    
$(document).ready(function () {
    $('.select2').select2();
    let test = '<%- pageCount %>';
    let rowCount = $('#changeEntry').val();
    $('#page-no').html(test);
    paginationData(rowCount, parseInt(test));
    setActiveMenuItem(`<%- active %>`);


    $("#searchkeyword").on("keyup", function () {
            let searchValue = $(this).val().toLowerCase();
            $("#concentration-settings-table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(searchValue) > -1);
            });
            let visibleRowCount = $("#concentration-settings-table tbody tr:visible").length;
            $('#page-no').html(visibleRowCount);
            filterTable('concentration-settings-table', 1);
        });

    // $('#searchkeyword').on('input', function () {
    //     let conceSettingValue = $(this).val().trim();
    //     let showEntry = $('#changeEntry').val();
    //     $('#changeEntry').val($('#changeEntry :first-child').val());
    //     $.ajax({
    //         type: 'POST',
    //         url: '/admin/concentration-settings/search',
    //         data: {
    //             searchLetter: conceSettingValue,
    //             showEntry: showEntry
    //         },
    //         success: function (data) {
    //             paginationData(rowCount, data.length)
    //             concenTable(data.data);
    //             $('#page-no').html(data.length);
    //         }
    //     })
    // })

    $(".pagination-search").on('click', '.pagination li', function () {
        let keyword = $("#searchkeyword").val();
        let showEntry = $('#changeEntry').val();
        let pageNo = $(this).data('lp');
       
        $.ajax({
            type: "POST",
            url: "/admin/concentration-settings/search",
            data: {
                searchLetter: keyword,
                pageNo: pageNo,
                showEntry: showEntry
            },
            success: function (data) {
                concenTable(data.data);
            }
        });
    });

    $('#changeEntry').on('change', function () {
        let showEntry = $(this).val();
        let ApiObj = {
            type: 'POST',
            url: '/admin/concentration-settings/showEntry',
            data: {
                showEntry: showEntry
            },
            datatype: 'JSON'
        }
        ajaxApi(ApiObj).then(result => {
            paginationData(showEntry, result.length)
            concenTable(result.data);
            $('#page-no').html(result.length);
            $('#searchkeyword').val('');
        }).catch(error => {
            let errorMessage = JSON.stringify(error.responseJSON.description);
            createToast({ title: "Alert", msg: errorMessage, type: "negative" });
        })
        })

    $('#refresh-concentration-settings').on('click', function () {
        let ApiObj = {
            url: '/admin/concentration-settings/refresh',
            type: 'POST',
            data: {},
            dataType: 'JSON'
        }
        ajaxApi(ApiObj).then(result => {
            createToast({ title: "Success", msg: result.description, type: "positive", showingTime:"1000" });
            setTimeout(function(){location.reload();},1000);     
        }).catch(error => {
            let errorMessage = JSON.stringify(error.responseJSON.description);
            createToast({ title: "Alert", msg: errorMessage, type: "negative" });
        })
    })
    
    $('#concentration-settings-table').on('click', '.delete-concentration-settings', function () {
        let concentrationId = $(this).closest('tr').data('id');
        let ApiObj = {
            url: '/admin/concentration-settings/delete',
            type: 'POST',
            data: {
                id: concentrationId
            },
            dataType: 'JSON'
        }
        ajaxApi(ApiObj).then(result => {
            createToast({ title: "Success", msg: result.description, type: "positive", showingTime:"1000" });
            setTimeout(function(){location.reload();},1000);
        }).catch(error => {
            let errorMessage = JSON.stringify(error.responseJSON.description);
            createToast({ title: "Alert", msg: errorMessage, type: "negative", showingTime:"1000" });
        })
    })

    $('#concentration-settings-table').on('click', '.edit-concentration-settings', function () {

        let editConcentration = $(this).closest('tr').data('name');
        let totalEleCredits = $(this).closest('tr').data('total-ele-credits');
        let maxCreditsPerArea = $(this).closest('tr').data('max-cre-per-area');
        let noOfAreaToCover = $(this).closest('tr').data('no-of-area-to-cover');
        let minCreditsPerArea = $(this).closest('tr').data('min-credits-per-area');
        let minCreditsInPrimaryArea = $(this).closest('tr').data('min-credits-in-primary-area');
        let id = $(this).closest('tr').data('id');
        let primaryArea = $(this).closest('tr').data('primary-area-name');
        let areaId = $(this).closest('tr').data('area-id') ;
        
        if (editConcentration.toLowerCase() == 'general management') {
            $('#primary-area-minimum').addClass('d-none');
            $('#primary-area-form').addClass('d-none');
        } else {
            $('#primary-area-minimum').removeClass('d-none');
            $('#primary-area-form').removeClass('d-none');
        }
       
        $('#edit-concentration-setting-modal #concentration-name').val(editConcentration);
        $('#edit-concentration-setting-modal #total-elective-credits').val(totalEleCredits);
        $('#edit-concentration-setting-modal #max-credits-per-area').val(maxCreditsPerArea);
        $('#edit-concentration-setting-modal #number-of-areas-to-cover').val(noOfAreaToCover);
        $('#edit-concentration-setting-modal #min-credits-per-area').val(minCreditsPerArea);
        $('#edit-concentration-setting-modal #min-credits-in-primary-area').val(minCreditsInPrimaryArea);
      
        if(primaryArea === 'NA'){
             $("#primary-area").val('-1').trigger('change');
        }else{
             $("#primary-area").val(areaId).trigger('change');
        }
        
        $('#edit-concentration-setting-modal #concentration-name').attr('data-id', id);
    })

    $('#edit-concentration-setting-modal').on('click', '#update-concentration-settings', function () {
        let id = $('#concentration-name').data('id');
        let concentrationName = $('#concentration-name').val();
        let minCreditsInPrimaryArea = $('#min-credits-in-primary-area').val();
        let maxCreditsPerArea = $('#max-credits-per-area').val();
        let minCreditsPerArea = $('#min-credits-per-area').val();
        let totalElectiveCredits = $('#total-elective-credits').val();
        let numberOfAreasToCover = $('#number-of-areas-to-cover').val();
        let primaryAreaOption = $('#primary-area option:selected').text() === '--Select Primary Area--' ? null : $('#primary-area option:selected').text();
        let isRequiredFieldsEmpty = isModalFieldEmpty('#edit-concentration-setting-modal .modal-body');
        
        if (isRequiredFieldsEmpty) {
            let editConcentrationsettings = {
                id: id,
                total_elective_credits: totalElectiveCredits,
                max_credits_per_area: maxCreditsPerArea,
                no_of_areas_to_cover: numberOfAreasToCover,
                min_credit_per_area: minCreditsPerArea,
                primary_area: primaryAreaOption,
                min_credits_in_primary_area: minCreditsInPrimaryArea
            };
            let ApiObj = {
                type: 'POST',
                url: '/admin/concentration-settings/update',
                data: {
                    editConcentrationsettings: JSON.stringify(editConcentrationsettings)
                },
                dataType: 'JSON'
            };
            ajaxApi(ApiObj)
                .then(result => {
                    createToast({ title: "Success", msg: result.description, type: "positive", showingTime:"1000" });
                    setTimeout(function(){location.reload();},1000);     
                })
                .catch(error => {
                    let errorMessage = JSON.stringify(error.responseJSON.description);
                    createToast({ title: "Alert", msg: errorMessage, type: "negative", showingTime:"1000" });
                });
        }
    });

    $('#edit-concentration-setting-modal').on('click', '.modal-close', function () {
        $(this).closest('.modal-content').find(`.is-in-valid`).addClass('d-none');
    });

});

    function concenTable(concentrationSettings) {
        $("#concentration-settings-table tbody").empty();
        let AjaxTable = ``;
        if (concentrationSettings.length > 0) {
            let count = 1;
            for (concentrationSetting of concentrationSettings) {
                AjaxTable +=
                    `<tr data-id="${concentrationSetting.id}"
                            data-total-ele-credits="${concentrationSetting.totalCredits}"
                            data-max-cre-per-area="${concentrationSetting.maxCreditsPerArea}"
                            data-no-of-area-to-cover="${concentrationSetting.noofAreasToCover}"
                            data-min-credits-per-area="${concentrationSetting.minCreditsPerArea}"
                            data-min-credits-in-primary-area="${concentrationSetting.minCreditsInPriArea}"
                            data-name = "${concentrationSetting.name}"
                            data-area-id = "${concentrationSetting.area_Id}">
                           <td>${count++}</td>
                           <td>${concentrationSetting.name}</td>
                           <td>${concentrationSetting.totalCredits}</td>
                           <td>${concentrationSetting.maxCreditsPerArea}</td>
                           <td>${concentrationSetting.noofAreasToCover}</td>
                           <td>${concentrationSetting.minCreditsPerArea}</td>
                           <td>${concentrationSetting.primaryArea}</td>
                           <td>${concentrationSetting.minCreditsInPriArea}</td>
                           <td>
                               <a class="edit-concentration-settings" data-bs-target="#edit-concentration-setting-modal" data-bs-toggle="modal">
                           <i class="fa fa-edit"></i></a>
                           <a class="delete-concentration-settings"><i class="fa-solid fa-trash text-danger"></i></a>
                           </td>
                       </tr>`
            }
        }
        $("#concentration-settings-table tbody").html(AjaxTable);
    }

</script>

<%- include('../partials/footerEnd.ejs') %>



